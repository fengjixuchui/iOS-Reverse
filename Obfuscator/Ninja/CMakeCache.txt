# This is the CMakeCache file.
# For build in directory: /Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Build
# It was generated by CMake: /usr/local/Cellar/cmake/3.15.2/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build a 32 bit version of the library.
BENCHMARK_BUILD_32_BITS:BOOL=OFF

//Flags used by the C++ compiler during coverage builds.
BENCHMARK_CXX_FLAGS_COVERAGE:STRING=-g

//Allow the downloading and in-tree building of unmet dependencies
BENCHMARK_DOWNLOAD_DEPENDENCIES:BOOL=OFF

//Enable building and running the assembly tests
BENCHMARK_ENABLE_ASSEMBLY_TESTS:BOOL=OFF

//Enable the use of exceptions in the benchmark library.
BENCHMARK_ENABLE_EXCEPTIONS:BOOL=OFF

//Enable building the unit tests which depend on gtest
BENCHMARK_ENABLE_GTEST_TESTS:BOOL=OFF

//Enable installation of benchmark. (Projects embedding benchmark
// may want to turn this OFF.)
BENCHMARK_ENABLE_INSTALL:BOOL=OFF

//Enable link time optimisation of the benchmark library.
BENCHMARK_ENABLE_LTO:BOOL=OFF

//Enable testing of the benchmark library.
BENCHMARK_ENABLE_TESTING:BOOL=OFF

//Flags used for linking binaries during coverage builds.
BENCHMARK_EXE_LINKER_FLAGS_COVERAGE:STRING=

//Flags used by the shared libraries linker during coverage builds.
BENCHMARK_SHARED_LINKER_FLAGS_COVERAGE:STRING=

//Build and test using libc++ as the standard library.
BENCHMARK_USE_LIBCXX:BOOL=OFF

//Default URL where bug reports are to be submitted.
BUG_REPORT_URL:STRING=https://bugs.llvm.org/

//Build clang-format VS plugin
BUILD_CLANG_FORMAT_VS_PLUGIN:BOOL=OFF

//Build all libraries as shared libraries instead of static
BUILD_SHARED_LIBS:BOOL=OFF

//Header providing backtrace(3) facility
Backtrace_HEADER:STRING=execinfo.h

//Path to a file.
Backtrace_INCLUDE_DIR:PATH=/usr/include

//Library providing backtrace(3), empty for default set of libraries
Backtrace_LIBRARY:FILEPATH=

//Enable Support for the Z3 constraint solver in the Clang Static
// Analyzer.
CLANG_ANALYZER_ENABLE_Z3_SOLVER:BOOL=OFF

//Install directory of the Z3 solver.
CLANG_ANALYZER_Z3_INSTALL_DIR:STRING=

//Build CLANG example programs by default.
CLANG_BUILD_EXAMPLES:BOOL=OFF

//Build the Clang tools. If OFF, just generate build targets.
CLANG_BUILD_TOOLS:BOOL=ON

//Default C++ stdlib to use ("libstdc++" or "libc++", empty for
// platform default
CLANG_DEFAULT_CXX_STDLIB:STRING=

//Default linker to use (linker name or absolute path, empty for
// platform default)
CLANG_DEFAULT_LINKER:STRING=

//Default objcopy executable to use.
CLANG_DEFAULT_OBJCOPY:STRING=objcopy

//Default OpenMP runtime used by -fopenmp.
CLANG_DEFAULT_OPENMP_RUNTIME:STRING=libomp

//Default runtime library to use ("libgcc" or "compiler-rt", empty
// for platform default)
CLANG_DEFAULT_RTLIB:STRING=

//Default standard to use for C/ObjC code (IDENT from LangStandards.def,
// empty for platform default)
CLANG_DEFAULT_STD_C:STRING=

//Default standard to use for C++/ObjC++ code (IDENT from LangStandards.def,
// empty for platform default)
CLANG_DEFAULT_STD_CXX:STRING=

//Build ARCMT.
CLANG_ENABLE_ARCMT:BOOL=ON

//Build Clang protobuf fuzzer.
CLANG_ENABLE_PROTO_FUZZER:BOOL=OFF

//Build static analyzer.
CLANG_ENABLE_STATIC_ANALYZER:BOOL=ON

//Major version number that will be appended to the clang executable
// name
CLANG_EXECUTABLE_VERSION:STRING=8

//Generate build targets for the Clang docs.
CLANG_INCLUDE_DOCS:BOOL=ON

//Generate build targets for the Clang unit tests.
CLANG_INCLUDE_TESTS:BOOL=ON

//Install the scan-build tool
CLANG_INSTALL_SCANBUILD:BOOL=ON

//Install the scan-view tool
CLANG_INSTALL_SCANVIEW:BOOL=ON

//Default architecture for OpenMP offloading to Nvidia GPUs.
CLANG_OPENMP_NVPTX_DEFAULT_ARCH:STRING=sm_35

//Order file to use when compiling clang in order to improve startup
// time (Darwin Only - requires ld64).
CLANG_ORDER_FILE:FILEPATH=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Build/tools/clang/clang.order

//Build clang with plugin support
CLANG_PLUGIN_SUPPORT:BOOL=ON

//Python versions to install libclang python bindings for
CLANG_PYTHON_BINDINGS_VERSIONS:STRING=

//Vendor-specific text for showing the repository the source is
// taken from.
CLANG_REPOSITORY_STRING:STRING=

//Relative directory from the Clang binary to its resource files.
CLANG_RESOURCE_DIR:STRING=

//Native TableGen executable. Saves building one when cross-compiling.
CLANG_TABLEGEN:STRING=clang-tblgen

//Run Clang tests under Valgrind
CLANG_TEST_USE_VG:BOOL=OFF

//Whether to build arcmt-test as part of CLANG
CLANG_TOOL_ARCMT_TEST_BUILD:BOOL=ON

//Whether to build clang-check as part of CLANG
CLANG_TOOL_CLANG_CHECK_BUILD:BOOL=ON

//Whether to build clang-diff as part of CLANG
CLANG_TOOL_CLANG_DIFF_BUILD:BOOL=ON

//Whether to build clang-extdef-mapping as part of CLANG
CLANG_TOOL_CLANG_EXTDEF_MAPPING_BUILD:BOOL=ON

//Whether to build clang-format as part of CLANG
CLANG_TOOL_CLANG_FORMAT_BUILD:BOOL=ON

//Whether to build clang-format-vs as part of CLANG
CLANG_TOOL_CLANG_FORMAT_VS_BUILD:BOOL=ON

//Whether to build clang-fuzzer as part of CLANG
CLANG_TOOL_CLANG_FUZZER_BUILD:BOOL=ON

//Whether to build clang-import-test as part of CLANG
CLANG_TOOL_CLANG_IMPORT_TEST_BUILD:BOOL=ON

//Whether to build clang-offload-bundler as part of CLANG
CLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD:BOOL=ON

//Whether to build clang-refactor as part of CLANG
CLANG_TOOL_CLANG_REFACTOR_BUILD:BOOL=ON

//Whether to build clang-rename as part of CLANG
CLANG_TOOL_CLANG_RENAME_BUILD:BOOL=ON

//Whether to build c-arcmt-test as part of CLANG
CLANG_TOOL_C_ARCMT_TEST_BUILD:BOOL=ON

//Whether to build c-index-test as part of CLANG
CLANG_TOOL_C_INDEX_TEST_BUILD:BOOL=ON

//Whether to build diagtool as part of CLANG
CLANG_TOOL_DIAGTOOL_BUILD:BOOL=ON

//Whether to build driver as part of CLANG
CLANG_TOOL_DRIVER_BUILD:BOOL=ON

//Whether to build handle-cxx as part of CLANG
CLANG_TOOL_HANDLE_CXX_BUILD:BOOL=ON

//Whether to build handle-llvm as part of CLANG
CLANG_TOOL_HANDLE_LLVM_BUILD:BOOL=ON

//Whether to build libclang as part of CLANG
CLANG_TOOL_LIBCLANG_BUILD:BOOL=ON

//Whether to build scan-build as part of CLANG
CLANG_TOOL_SCAN_BUILD_BUILD:BOOL=ON

//Whether to build scan-view as part of CLANG
CLANG_TOOL_SCAN_VIEW_BUILD:BOOL=ON

//Vendor-specific text for showing with version information.
CLANG_VENDOR:STRING=

//Vendor-specific uti.
CLANG_VENDOR_UTI:STRING=org.llvm.clang

//Path to a program.
CMAKE_AR:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar

//ASM compiler
CMAKE_ASM_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=-g

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=MinSizeRel

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Executable file format
CMAKE_EXECUTABLE_FORMAT:STRING=MACHO

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Release

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//libtool executable
CMAKE_LIBTOOL:PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/libtool

//Path to a program.
CMAKE_LINKER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld

//Program used to build from build.ninja files.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/local/bin/ninja

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/objdump

//Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=

//Minimum OS X version to target for deployment (at runtime); newer
// APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

//The product will be built against the headers and libraries located
// inside the indicated SDK.
CMAKE_OSX_SYSROOT:STRING=

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=LLVM

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=8.0.0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=8

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Path to a program.
CMAKE_XCRUN:FILEPATH=/usr/bin/xcrun

//Override the shadow scale to be used in ASan runtime
COMPILER_RT_ASAN_SHADOW_SCALE:STRING=

//Build for a bare-metal target.
COMPILER_RT_BAREMETAL_BUILD:STRING=OFF

//Build builtins
COMPILER_RT_BUILD_BUILTINS:BOOL=ON

//Build libFuzzer
COMPILER_RT_BUILD_LIBFUZZER:BOOL=ON

//Build profile runtime
COMPILER_RT_BUILD_PROFILE:BOOL=ON

//Build sanitizers
COMPILER_RT_BUILD_SANITIZERS:BOOL=ON

//Build xray
COMPILER_RT_BUILD_XRAY:BOOL=ON

//Build xray with no preinit patching
COMPILER_RT_BUILD_XRAY_NO_PREINIT:BOOL=OFF

//Can we execute instrumented tests
COMPILER_RT_CAN_EXECUTE_TESTS:BOOL=ON

//Build runtimes with full debug info
COMPILER_RT_DEBUG:BOOL=OFF

//Default triple for which compiler-rt runtimes will be built.
COMPILER_RT_DEFAULT_TARGET_TRIPLE:STRING=x86_64-apple-darwin17.7.0

//Enable building for iOS
COMPILER_RT_ENABLE_IOS:BOOL=ON

//Enable building for tvOS - Experimental
COMPILER_RT_ENABLE_TVOS:BOOL=OFF

//Enable building for watchOS - Experimental
COMPILER_RT_ENABLE_WATCHOS:BOOL=OFF

//Fail and stop if warning is triggered
COMPILER_RT_ENABLE_WERROR:BOOL=OFF

//Skip the atomic builtin (these should normally be provided by
// a shared library)
COMPILER_RT_EXCLUDE_ATOMIC_BUILTIN:BOOL=ON

//Generate dSYM files and strip executables and libraries (Darwin
// Only)
COMPILER_RT_EXTERNALIZE_DEBUGINFO:BOOL=OFF

//Enable libc interceptors in HWASan (testing mode)
COMPILER_RT_HWASAN_WITH_INTERCEPTORS:STRING=ON

//Generate and build compiler-rt unit tests.
COMPILER_RT_INCLUDE_TESTS:BOOL=ON

//sanitizers to build if supported on the target (all;asan;dfsan;msan;hwasan;tsan;safestack;cfi;esan;scudo;ubsan_minimal)
COMPILER_RT_SANITIZERS_TO_BUILD:STRING=all

//Use compiler-rt builtins instead of libgcc
COMPILER_RT_USE_BUILTINS_LIBRARY:BOOL=OFF

//Enable compiler-rt to use libc++ from the source tree
COMPILER_RT_USE_LIBCXX:BOOL=ON

//Enable to build OSX bundles
CPACK_BINARY_BUNDLE:BOOL=OFF

//Enable to build Debian packages
CPACK_BINARY_DEB:BOOL=OFF

//Enable to build OSX Drag And Drop package
CPACK_BINARY_DRAGNDROP:BOOL=OFF

//Enable to build FreeBSD packages
CPACK_BINARY_FREEBSD:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=OFF

//Enable to build OSX X11 packages
CPACK_BINARY_OSXX11:BOOL=OFF

//Enable to build PackageMaker packages
CPACK_BINARY_PACKAGEMAKER:BOOL=OFF

//Enable to build productbuild packages
CPACK_BINARY_PRODUCTBUILD:BOOL=OFF

//Enable to build RPM packages
CPACK_BINARY_RPM:BOOL=OFF

//Enable to build STGZ packages
CPACK_BINARY_STGZ:BOOL=ON

//Enable to build TBZ2 packages
CPACK_BINARY_TBZ2:BOOL=OFF

//Enable to build TGZ packages
CPACK_BINARY_TGZ:BOOL=ON

//Enable to build TXZ packages
CPACK_BINARY_TXZ:BOOL=OFF

//Enable to build RPM source packages
CPACK_SOURCE_RPM:BOOL=OFF

//Enable to build TBZ2 source packages
CPACK_SOURCE_TBZ2:BOOL=ON

//Enable to build TGZ source packages
CPACK_SOURCE_TGZ:BOOL=ON

//Enable to build TXZ source packages
CPACK_SOURCE_TXZ:BOOL=ON

//Enable to build TZ source packages
CPACK_SOURCE_TZ:BOOL=ON

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=OFF

//Colon separated list of directories clang will search for headers.
C_INCLUDE_DIRS:STRING=

//Prefer Darwin public SDK, even when an internal SDK is present.
DARWIN_PREFER_PUBLIC_SDK:BOOL=OFF

//Darwin SDK path for SDK appletvos.
DARWIN_appletvos_CACHED_SYSROOT:STRING=/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.1.sdk

//Darwin SDK path for SDK appletvsimulator.
DARWIN_appletvsimulator_CACHED_SYSROOT:STRING=/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVSimulator.platform/Developer/SDKs/AppleTVSimulator12.1.sdk

//List of valid architectures for platform ios.
DARWIN_ios_ARCHS:STRING=armv6;armv7;armv7s;arm64;armv7k;arm64e

//List of valid architectures for platform iossim.
DARWIN_iossim_ARCHS:STRING=i386;x86_64

//Darwin SDK path for SDK iphoneos.
DARWIN_iphoneos_CACHED_SYSROOT:STRING=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk

//Darwin SDK path for SDK iphonesimulator.
DARWIN_iphonesimulator_CACHED_SYSROOT:STRING=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator12.1.sdk

//Darwin SDK path for SDK macosx.
DARWIN_macosx_CACHED_SYSROOT:STRING=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk

//List of valid architectures for platform osx.
DARWIN_osx_ARCHS:STRING=x86_64;x86_64h

//Darwin SDK path for SDK watchos.
DARWIN_watchos_CACHED_SYSROOT:STRING=/Applications/Xcode.app/Contents/Developer/Platforms/WatchOS.platform/Developer/SDKs/WatchOS5.1.sdk

//Darwin SDK path for SDK watchsimulator.
DARWIN_watchsimulator_CACHED_SYSROOT:STRING=/Applications/Xcode.app/Contents/Developer/Platforms/WatchSimulator.platform/Developer/SDKs/WatchSimulator5.1.sdk

//Default <path> to all compiler invocations for --sysroot=<path>.
DEFAULT_SYSROOT:PATH=

//Path to a library.
DL_LIBRARY_PATH:FILEPATH=/usr/lib/libdl.dylib

//Path to a program.
DTRACE:FILEPATH=/usr/sbin/dtrace

//Enable the experimental new pass manager by default.
ENABLE_EXPERIMENTAL_NEW_PASS_MANAGER:BOOL=FALSE

//pass --build-id to ld
ENABLE_LINKER_BUILD_ID:BOOL=OFF

//enable x86 relax relocations by default
ENABLE_X86_RELAX_RELOCATIONS:BOOL=OFF

//Additional directory, where CMake should search for ffi.h or
// ffi/ffi.h
FFI_INCLUDE_DIR:PATH=

//Additional directory, where CMake should search for libffi.so
FFI_LIBRARY_DIR:PATH=

//Directory where gcc is installed.
GCC_INSTALL_PREFIX:PATH=

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//The gold linker
GOLD_EXECUTABLE:FILEPATH=/usr/bin/ld

//go executable
GO_EXECUTABLE:FILEPATH=/usr/local/bin/go

//OK
HAVE_STD_REGEX:BOOL=ON

//Path to a library.
ICONV_LIBRARY_PATH:FILEPATH=/usr/lib/libiconv.dylib

//ld64 executable
LD64_EXECUTABLE:PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld

//Build libclang as a static library (in addition to a shared one)
LIBCLANG_BUILD_STATIC:BOOL=OFF

//Major version number that will be appended to the libclang library
LIBCLANG_LIBRARY_VERSION:STRING=8

//Build libc++abi for baremetal targets.
LIBCXXABI_BAREMETAL:BOOL=OFF

//Build 32 bit libc++abi.
LIBCXXABI_BUILD_32_BITS:BOOL=OFF

//Build libc++abi with an externalized threading library.
//\n   This option may only be set to ON when LIBCXXABI_ENABLE_THREADS=ON
LIBCXXABI_BUILD_EXTERNAL_THREAD_LIBRARY:BOOL=OFF

//Enable assertions independent of build mode.
LIBCXXABI_ENABLE_ASSERTIONS:BOOL=ON

//Use exceptions.
LIBCXXABI_ENABLE_EXCEPTIONS:BOOL=ON

//Build libc++abi with definitions for operator new/delete. Normally
// libc++
//\n    provides these definitions
LIBCXXABI_ENABLE_NEW_DELETE_DEFINITIONS:BOOL=ON

//Compile with pedantic enabled.
LIBCXXABI_ENABLE_PEDANTIC:BOOL=ON

//Build libc++abi as a shared library.
LIBCXXABI_ENABLE_SHARED:BOOL=ON

//Build libc++abi as a static library.
LIBCXXABI_ENABLE_STATIC:BOOL=ON

//Statically link the LLVM unwinder.
LIBCXXABI_ENABLE_STATIC_UNWINDER:BOOL=OFF

//Build with threads enabled
LIBCXXABI_ENABLE_THREADS:BOOL=ON

//Fail and stop if a warning is triggered.
LIBCXXABI_ENABLE_WERROR:BOOL=OFF

//Executor to use when running tests.
LIBCXXABI_EXECUTOR:STRING=None

//GCC toolchain for cross compiling.
LIBCXXABI_GCC_TOOLCHAIN:PATH=

//Build libc++abi with an externalized threading API.
//\n  This option may only be set to ON when LIBCXXABI_ENABLE_THREADS=ON.
LIBCXXABI_HAS_EXTERNAL_THREAD_API:BOOL=OFF

//Ignore auto-detection and force use of pthread API
LIBCXXABI_HAS_PTHREAD_API:BOOL=OFF

//Generate build targets for the libc++abi unit tests.
LIBCXXABI_INCLUDE_TESTS:BOOL=ON

//Install the libc++abi library.
LIBCXXABI_INSTALL_LIBRARY:BOOL=ON

//Define libc++abi destination prefix.
LIBCXXABI_INSTALL_PREFIX:STRING=

//Install the shared libc++abi library.
LIBCXXABI_INSTALL_SHARED_LIBRARY:BOOL=ON

//Install the static libc++abi library.
LIBCXXABI_INSTALL_STATIC_LIBRARY:BOOL=ON

//Specify path to libc++ includes.
LIBCXXABI_LIBCXX_INCLUDES:PATH=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source/projects/libcxx/include

//The path to libc++ library.
LIBCXXABI_LIBCXX_LIBRARY_PATH:PATH=

//Specify path to libc++ source.
LIBCXXABI_LIBCXX_PATH:PATH=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source/projects/libcxx

//Define suffix of library directory name (32/64)
LIBCXXABI_LIBDIR_SUFFIX:STRING=

//Specify path to libunwind includes.
LIBCXXABI_LIBUNWIND_INCLUDES:PATH=

//Specify path to libunwind source.
LIBCXXABI_LIBUNWIND_PATH:PATH=

//Set this to make the terminate handler default to a silent alternative
LIBCXXABI_SILENT_TERMINATE:BOOL=OFF

//Sysroot for cross compiling.
LIBCXXABI_SYSROOT:PATH=

//TargetInfo to use when setting up test environment.
LIBCXXABI_TARGET_INFO:STRING=libcxx.test.target_info.LocalTI

//Target triple for cross compiling.
LIBCXXABI_TARGET_TRIPLE:STRING=

//Use compiler-rt instead of libgcc
LIBCXXABI_USE_COMPILER_RT:BOOL=OFF

//Build and use the LLVM unwinder.
LIBCXXABI_USE_LLVM_UNWINDER:BOOL=OFF

//A semicolon separated list of ABI macros to define in the site
// config header.
LIBCXX_ABI_DEFINES:STRING=

//Ignore auto-detection and force use of the Itanium ABI.
LIBCXX_ABI_FORCE_ITANIUM:BOOL=OFF

//Ignore auto-detection and force use of the Microsoft ABI.
LIBCXX_ABI_FORCE_MICROSOFT:BOOL=OFF

//The inline ABI namespace used by libc++. It defaults to __n where
// `n` is the current ABI version.
LIBCXX_ABI_NAMESPACE:STRING=

//Unstable ABI of libc++.
LIBCXX_ABI_UNSTABLE:BOOL=OFF

//ABI version of libc++. Can be either 1 or 2, where 2 is currently
// not stable. Defaults to 1.
LIBCXX_ABI_VERSION:STRING=1

//Use alternate GCC toolchain when building the native benchmarks
LIBCXX_BENCHMARK_NATIVE_GCC_TOOLCHAIN:STRING=

//Build the benchmarks against the specified native STL.
//\n         The value must be one of libc++/libstdc++
LIBCXX_BENCHMARK_NATIVE_STDLIB:STRING=

//Arguments to pass when running the benchmarks using check-cxx-benchmarks
LIBCXX_BENCHMARK_TEST_ARGS:STRING=--benchmark_min_time=0.01

//Build 32 bit libc++.
LIBCXX_BUILD_32_BITS:BOOL=OFF

//Build libc++ with an externalized threading library.
//\n     This option may only be set to ON when LIBCXX_ENABLE_THREADS=ON
LIBCXX_BUILD_EXTERNAL_THREAD_LIBRARY:BOOL=OFF

//Configure libcxx for use within an IDE
LIBCXX_CONFIGURE_IDE:BOOL=OFF

//The Profile-rt library used to build with code coverage
LIBCXX_COVERAGE_LIBRARY:STRING=

//Specify C++ ABI library to use.
LIBCXX_CXX_ABI:STRING=default

//Paths to C++ ABI header directories separated by ';'.
LIBCXX_CXX_ABI_INCLUDE_PATHS:PATH=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source/projects/libcxxabi/include

//Paths to C++ ABI library directory
LIBCXX_CXX_ABI_LIBRARY_PATH:PATH=

//Disable #warnings about conflicting macros.
LIBCXX_DISABLE_MACRO_CONFLICT_WARNINGS:BOOL=OFF

//Use and install a linker script for the given ABI library
LIBCXX_ENABLE_ABI_LINKER_SCRIPT:BOOL=OFF

//Enable assertions independent of build mode.
LIBCXX_ENABLE_ASSERTIONS:BOOL=OFF

//Use exceptions.
LIBCXX_ENABLE_EXCEPTIONS:BOOL=ON

//Build libc++experimental.a
LIBCXX_ENABLE_EXPERIMENTAL_LIBRARY:BOOL=ON

//Build filesystem as part of libc++fs.a
LIBCXX_ENABLE_FILESYSTEM:BOOL=ON

//Build libc++ with support for the global filesystem namespace.
LIBCXX_ENABLE_GLOBAL_FILESYSTEM_NAMESPACE:BOOL=ON

//Build libc++ with support for a monotonic clock.
//\n   This option may only be set to OFF when LIBCXX_ENABLE_THREADS=OFF.
LIBCXX_ENABLE_MONOTONIC_CLOCK:BOOL=ON

//Build libc++ with definitions for operator new/delete. This option
// can
//\n    be used to disable the definitions when libc++abi is expected
// to provide
//\n    them
LIBCXX_ENABLE_NEW_DELETE_DEFINITIONS:BOOL=ON

//Compile with pedantic enabled.
LIBCXX_ENABLE_PEDANTIC:BOOL=OFF

//Use run time type information.
LIBCXX_ENABLE_RTTI:BOOL=ON

//Build libc++ as a shared library.
LIBCXX_ENABLE_SHARED:BOOL=ON

//Build libc++ as a static library.
LIBCXX_ENABLE_STATIC:BOOL=ON

//Statically link the ABI library
LIBCXX_ENABLE_STATIC_ABI_LIBRARY:BOOL=OFF

//Build libc++ with support for stdin/std::cin.
LIBCXX_ENABLE_STDIN:BOOL=ON

//Build libc++ with support for stdout/std::cout.
LIBCXX_ENABLE_STDOUT:BOOL=ON

//Build libc++ with support for threads.
LIBCXX_ENABLE_THREADS:BOOL=ON

//Build libc++ with support for thread-unsafe C functions
LIBCXX_ENABLE_THREAD_UNSAFE_C_FUNCTIONS:BOOL=ON

//Fail and stop if a warning is triggered.
LIBCXX_ENABLE_WERROR:BOOL=OFF

//Executor to use when running tests.
LIBCXX_EXECUTOR:STRING=None

//Use alternate GCC toolchain.
LIBCXX_GCC_TOOLCHAIN:STRING=

//Enable generating code coverage.
LIBCXX_GENERATE_COVERAGE:BOOL=OFF

//Build libc++ with an externalized threading API.
//\n   This option may only be set to ON when LIBCXX_ENABLE_THREADS=ON.
LIBCXX_HAS_EXTERNAL_THREAD_API:BOOL=OFF

//Build libc++ with support for the Musl C library
LIBCXX_HAS_MUSL_LIBC:BOOL=OFF

//Ignore auto-detection and force use of pthread API
LIBCXX_HAS_PTHREAD_API:BOOL=OFF

//Ignore auto-detection and force use of win32 thread API
LIBCXX_HAS_WIN32_THREAD_API:BOOL=OFF

//Do not export any symbols from the static library.
LIBCXX_HERMETIC_STATIC_LIBRARY:BOOL=OFF

//Enable per TU ABI insulation by default. To be used by vendors.
LIBCXX_HIDE_FROM_ABI_PER_TU_BY_DEFAULT:BOOL=OFF

//Build the libc++ benchmarks and their dependencies
LIBCXX_INCLUDE_BENCHMARKS:BOOL=ON

//Build the libc++ documentation.
LIBCXX_INCLUDE_DOCS:BOOL=ON

//Build the libc++ tests.
LIBCXX_INCLUDE_TESTS:BOOL=ON

//Install libc++experimental.a
LIBCXX_INSTALL_EXPERIMENTAL_LIBRARY:BOOL=ON

//Install libc++fs.a
LIBCXX_INSTALL_FILESYSTEM_LIBRARY:BOOL=ON

//Install the libc++ headers.
LIBCXX_INSTALL_HEADERS:BOOL=ON

//Define libc++ header destination prefix.
LIBCXX_INSTALL_HEADER_PREFIX:STRING=

//Install the libc++ library.
LIBCXX_INSTALL_LIBRARY:BOOL=ON

//Define libc++ destination prefix.
LIBCXX_INSTALL_PREFIX:STRING=

//Install the shared libc++ library.
LIBCXX_INSTALL_SHARED_LIBRARY:BOOL=ON

//Install the static libc++ library.
LIBCXX_INSTALL_STATIC_LIBRARY:BOOL=ON

//Install libc++ support headers.
LIBCXX_INSTALL_SUPPORT_HEADERS:BOOL=ON

//Path to a file.
LIBCXX_LIBCXXABI_INCLUDES_INTERNAL:PATH=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source/projects/libcxxabi/include

//Define suffix of library directory name (32/64)
LIBCXX_LIBDIR_SUFFIX:STRING=

//Configuration variant to use for LIT.
LIBCXX_LIT_VARIANT:STRING=libcxx

//Enable overwriting darwins libc++ installation.
LIBCXX_OVERRIDE_DARWIN_INSTALL:BOOL=OFF

//Use alternate sysroot.
LIBCXX_SYSROOT:STRING=

//TargetInfo to use when setting up test environment.
LIBCXX_TARGET_INFO:STRING=libcxx.test.target_info.LocalTI

//Additonal linker flags to pass when compiling the tests
LIBCXX_TEST_COMPILER_FLAGS:STRING=

//Additonal linker flags to pass when compiling the tests
LIBCXX_TEST_LINKER_FLAGS:STRING=

//Use compiler-rt instead of libgcc
LIBCXX_USE_COMPILER_RT:BOOL=OFF

//Appended user specified assembler flags.
LIBOMP_ASMFLAGS:STRING=

//Appended user specified C compiler flags.
LIBOMP_CFLAGS:STRING=

//Should exports be copied into source exports/ directory?
LIBOMP_COPY_EXPORTS:STRING=TRUE

//Appended user specified C preprocessor flags.
LIBOMP_CPPFLAGS:STRING=

//Appended user specified C++ compiler flags.
LIBOMP_CXXFLAGS:STRING=

//Shared library instead of static library?
LIBOMP_ENABLE_SHARED:BOOL=TRUE

//Appended user specified Fortran compiler flags.  These are only
// used if LIBOMP_FORTRAN_MODULES==TRUE.
LIBOMP_FFLAGS:STRING=

//Create Fortran module files? (requires fortran compiler)
LIBOMP_FORTRAN_MODULES:BOOL=FALSE

//Install path for hwloc library
LIBOMP_HWLOC_INSTALL_DIR:PATH=/usr/local

//Install libgomp and libiomp5 library aliases for backwards compatibility
LIBOMP_INSTALL_ALIASES:BOOL=TRUE

//Appended user specified linker flags.
LIBOMP_LDFLAGS:STRING=

//Appended user specified linked libs flags. (e.g., -lm)
LIBOMP_LIBFLAGS:STRING=

//Base OMP library name
LIBOMP_LIB_NAME:STRING=libomp

//Performance,Profiling,Stubs library (normal/profile/stubs)
LIBOMP_LIB_TYPE:STRING=normal

//Intel(R) Many Integrated Core Architecture (Intel(R) MIC Architecture)
// (knf/knc).  Ignored if not Intel(R) MIC Architecture build.
LIBOMP_MIC_ARCH:STRING=knc

//Trace OMPT initialization?
LIBOMP_OMPT_DEBUG:BOOL=FALSE

//OMPT-optional?
LIBOMP_OMPT_OPTIONAL:BOOL=TRUE

//OMPT-support?
LIBOMP_OMPT_SUPPORT:BOOL=TRUE

//The OpenMP version (50/45/40/30)
LIBOMP_OMP_VERSION:STRING=50

//For Mac builds, semicolon separated list of architectures to
// build for universal fat binary.
LIBOMP_OSX_ARCHITECTURES:STRING=

//Path to a program.
LIBOMP_SHELL:FILEPATH=/bin/sh

//Stats-Gathering functionality?
LIBOMP_STATS:BOOL=FALSE

//TSAN-support?
LIBOMP_TSAN_SUPPORT:BOOL=FALSE

//Should Intel(R) TSX lock be compiled (adaptive lock in kmp_lock.cpp).
//  These are x86 specific.
LIBOMP_USE_ADAPTIVE_LOCKS:BOOL=TRUE

//Enable debugger interface code?
LIBOMP_USE_DEBUGGER:BOOL=FALSE

//Hierarchical scheduling support?
LIBOMP_USE_HIER_SCHED:BOOL=FALSE

//Use Hwloc (http://www.open-mpi.org/projects/hwloc/) library for
// affinity?
LIBOMP_USE_HWLOC:BOOL=FALSE

//Should larger alignment (4096 bytes) be used for some locks and
// data structures?
LIBOMP_USE_INTERNODE_ALIGNMENT:BOOL=FALSE

//Enable ITT notify?
LIBOMP_USE_ITT_NOTIFY:BOOL=TRUE

//Should 128-bit precision entry points be built?
LIBOMP_USE_QUAD_PRECISION:BOOL=FALSE

//Should we link to C++ library?
LIBOMP_USE_STDCPPLIB:BOOL=FALSE

//Should version symbols be used? These provide binary compatibility
// with libgomp.
LIBOMP_USE_VERSION_SYMBOLS:BOOL=

//Path to a library.
LIBRT:FILEPATH=LIBRT-NOTFOUND

//Build 32 bit libunwind
LIBUNWIND_BUILD_32_BITS:BOOL=OFF

//Paths to C++ header directories separated by ';'.
LIBUNWIND_CXX_INCLUDE_PATHS:PATH=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source/projects/libcxx/include

//Enable unwinding support for ARM WMMX registers.
LIBUNWIND_ENABLE_ARM_WMMX:BOOL=OFF

//Enable assertions independent of build mode.
LIBUNWIND_ENABLE_ASSERTIONS:BOOL=ON

//Enable cross-platform unwinding support.
LIBUNWIND_ENABLE_CROSS_UNWINDING:BOOL=OFF

//Compile with pedantic enabled.
LIBUNWIND_ENABLE_PEDANTIC:BOOL=ON

//Build libunwind as a shared library.
LIBUNWIND_ENABLE_SHARED:BOOL=ON

//Build libunwind as a static library.
LIBUNWIND_ENABLE_STATIC:BOOL=ON

//Build libunwind with threading support.
LIBUNWIND_ENABLE_THREADS:BOOL=ON

//Fail and stop if a warning is triggered.
LIBUNWIND_ENABLE_WERROR:BOOL=OFF

//Executor to use when running tests.
LIBUNWIND_EXECUTOR:STRING=None

//GCC toolchain for cross compiling.
LIBUNWIND_GCC_TOOLCHAIN:PATH=

//Build the libunwind documentation.
LIBUNWIND_INCLUDE_DOCS:BOOL=ON

//Install the libunwind library.
LIBUNWIND_INSTALL_LIBRARY:BOOL=ON

//Define libunwind destination prefix.
LIBUNWIND_INSTALL_PREFIX:STRING=

//Install the shared libunwind library.
LIBUNWIND_INSTALL_SHARED_LIBRARY:BOOL=ON

//Install the static libunwind library.
LIBUNWIND_INSTALL_STATIC_LIBRARY:BOOL=ON

//Path to a file.
LIBUNWIND_LIBCXX_INCLUDES_INTERNAL:PATH=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source/projects/libcxx/include

//Define suffix of library directory name (32/64)
LIBUNWIND_LIBDIR_SUFFIX:STRING=

//Sysroot for cross compiling.
LIBUNWIND_SYSROOT:PATH=

//TargetInfo to use when setting up test environment.
LIBUNWIND_TARGET_INFO:STRING=libcxx.test.target_info.LocalTI

//Target triple for cross compiling.
LIBUNWIND_TARGET_TRIPLE:STRING=

//Additional compiler flags for test programs.
LIBUNWIND_TEST_COMPILER_FLAGS:STRING=

//Additional linker flags for test programs.
LIBUNWIND_TEST_LINKER_FLAGS:STRING=

//Use compiler-rt instead of libgcc
LIBUNWIND_USE_COMPILER_RT:BOOL=OFF

//Path to a file.
LIBXML2_INCLUDE_DIR:PATH=/usr/include/libxml2

//Path to a library.
LIBXML2_LIBRARY:FILEPATH=/usr/lib/libxml2.dylib

//Path to a program.
LIBXML2_XMLLINT_EXECUTABLE:FILEPATH=/Users/silence/anaconda3/bin/xmllint

//No help, variable specified on the command line.
LLDB_CODESIGN_IDENTITY:UNINITIALIZED=

//Dependencies for the target
LLVMCFIVerify_LIB_DEPENDS:STATIC=general;LLVMDebugInfoDWARF;general;LLVMMC;general;LLVMMCParser;general;LLVMObject;general;LLVMSupport;general;LLVMSymbolize;

//Dependencies for the target
LLVMExegesisAArch64_LIB_DEPENDS:STATIC=general;LLVMAArch64CodeGen;general;LLVMAArch64AsmParser;general;LLVMAArch64AsmPrinter;general;LLVMAArch64Desc;general;LLVMAArch64Disassembler;general;LLVMAArch64Info;general;LLVMAArch64Utils;general;LLVMExegesis;

//Dependencies for the target
LLVMExegesisPowerPC_LIB_DEPENDS:STATIC=general;LLVMPowerPCCodeGen;general;LLVMPowerPCAsmParser;general;LLVMPowerPCAsmPrinter;general;LLVMPowerPCDesc;general;LLVMPowerPCDisassembler;general;LLVMPowerPCInfo;general;LLVMExegesis;

//Dependencies for the target
LLVMExegesisX86_LIB_DEPENDS:STATIC=general;LLVMX86CodeGen;general;LLVMX86AsmParser;general;LLVMX86AsmPrinter;general;LLVMX86Desc;general;LLVMX86Disassembler;general;LLVMX86Info;general;LLVMX86Utils;general;LLVMExegesis;

//Dependencies for the target
LLVMExegesis_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCodeGen;general;LLVMCore;general;LLVMExecutionEngine;general;LLVMGlobalISel;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMMCJIT;general;LLVMObject;general;LLVMObjectYAML;general;LLVMSupport;

//Dependencies for the target
LLVMOrcJIT_LIB_DEPENDS:STATIC=general;LLVMBitReader;general;LLVMBitWriter;

//Dependencies for the target
LLVMTestingSupport_LIB_DEPENDS:STATIC=general;gtest;

//Enable abi-breaking checks.  Can be WITH_ASSERTS, FORCE_ON or
// FORCE_OFF.
LLVM_ABI_BREAKING_CHECKS:STRING=WITH_ASSERTS

//Embed the version control system revision id in LLVM
LLVM_APPEND_VC_REV:BOOL=on

//Value Computed by CMake
LLVM_BINARY_DIR:STATIC=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Build

//PATH to binutils/include containing plugin-api.h for gold plugin.
LLVM_BINUTILS_INCDIR:PATH=

//Build 32 bits executables and libraries.
LLVM_BUILD_32_BITS:BOOL=OFF

//Add LLVM benchmark targets to the list of default
//\ntargets. If OFF, benchmarks still could be built using Benchmarks
// target.
LLVM_BUILD_BENCHMARKS:BOOL=OFF

//Build the llvm documentation.
LLVM_BUILD_DOCS:BOOL=OFF

//Build the LLVM example programs. If OFF, just generate build
// targets.
LLVM_BUILD_EXAMPLES:BOOL=OFF

//Build compiler-rt as an external project.
LLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=OFF

//Build LLVM and tools with PGO instrumentation. May be specified
// as IR or Frontend
LLVM_BUILD_INSTRUMENTED:STRING=OFF

//Build LLVM and tools with Code Coverage instrumentation
LLVM_BUILD_INSTRUMENTED_COVERAGE:BOOL=OFF

//Build libllvm-c re-export library (Darwin only)
LLVM_BUILD_LLVM_C_DYLIB:BOOL=OFF

//Build libllvm dynamic library
LLVM_BUILD_LLVM_DYLIB:BOOL=OFF

//Build the LLVM runtime libraries.
LLVM_BUILD_RUNTIME:BOOL=ON

//Build the LLVM runtimes. If OFF, just generate build targets.
LLVM_BUILD_RUNTIMES:BOOL=ON

//Build LLVM unit tests. If OFF, just generate build targets.
LLVM_BUILD_TESTS:BOOL=OFF

//Build the LLVM tools. If OFF, just generate build targets.
LLVM_BUILD_TOOLS:BOOL=ON

//Build LLVM utility binaries. If OFF, just generate build targets.
LLVM_BUILD_UTILS:BOOL=ON

//Set to ON for a ccache enabled build
LLVM_CCACHE_BUILD:BOOL=OFF

//Sign executables and dylibs with the given identity or skip if
// empty (Darwin Only)
LLVM_CODESIGNING_IDENTITY:STRING=

//Create a target to install LLVM into an Xcode toolchain
LLVM_CREATE_XCODE_TOOLCHAIN:BOOL=on

//Default target for which LLVM will generate code.
LLVM_DEFAULT_TARGET_TRIPLE:STRING=x86_64-apple-darwin17.7.0

//Dependency debugging mode to verify correctly expressed library
// dependencies (Darwin only)
LLVM_DEPENDENCY_DEBUGGING:BOOL=OFF

//Semicolon-separated list of components to include in libLLVM,
// or "all".
LLVM_DYLIB_COMPONENTS:STRING=all

//Enable assertions
LLVM_ENABLE_ASSERTIONS:BOOL=OFF

//Enable embedding backtraces on crash.
LLVM_ENABLE_BACKTRACES:BOOL=ON

//Build bindings.
LLVM_ENABLE_BINDINGS:BOOL=ON

//Turn on memory dumps on crashes. Currently only implemented on
// Windows.
LLVM_ENABLE_CRASH_DUMPS:BOOL=OFF

//Enable crash overrides.
LLVM_ENABLE_CRASH_OVERRIDES:BOOL=ON

//Compile with C++1y enabled.
LLVM_ENABLE_CXX1Y:BOOL=OFF

//Compile with C++1z enabled.
LLVM_ENABLE_CXX1Z:BOOL=OFF

//Debug: Prints tablegen patterns that were used for selecting
LLVM_ENABLE_DAGISEL_COV:BOOL=OFF

//Use doxygen to generate llvm API documentation.
LLVM_ENABLE_DOXYGEN:BOOL=OFF

//Enable dump functions even when assertions are disabled
LLVM_ENABLE_DUMP:BOOL=OFF

//Enable Exception handling
LLVM_ENABLE_EH:BOOL=OFF

//Enable expensive checks
LLVM_ENABLE_EXPENSIVE_CHECKS:BOOL=OFF

//Use libffi to call external functions from the interpreter
LLVM_ENABLE_FFI:BOOL=OFF

//Enable collection of GlobalISel rule coverage
LLVM_ENABLE_GISEL_COV:BOOL=OFF

//Disable optional build system features that cause problems for
// IDE generators
LLVM_ENABLE_IDE:BOOL=OFF

//Build LLVM and tools with IR PGO instrumentation (deprecated)
LLVM_ENABLE_IR_PGO:BOOL=OFF

//Use libc++ if available.
LLVM_ENABLE_LIBCXX:BOOL=OFF

//Use libedit if available.
LLVM_ENABLE_LIBEDIT:BOOL=ON

//Use libpfm for performance counters if available.
LLVM_ENABLE_LIBPFM:BOOL=ON

//Use libxml2 if available. Can be ON, OFF, or FORCE_ON
LLVM_ENABLE_LIBXML2:STRING=ON

//Use lld as C and C++ linker.
LLVM_ENABLE_LLD:BOOL=OFF

//Compile with -fmodules-local-submodule-visibility.
LLVM_ENABLE_LOCAL_SUBMODULE_VISIBILITY:BOOL=OFF

//Build LLVM with LTO. May be specified as Thin or Full to use
// a particular kind of LTO
LLVM_ENABLE_LTO:STRING=OFF

//Compile with C++ modules enabled.
LLVM_ENABLE_MODULES:BOOL=OFF

//Compile with -gmodules.
LLVM_ENABLE_MODULE_DEBUGGING:BOOL=ON

//Build OCaml bindings documentation.
LLVM_ENABLE_OCAMLDOC:BOOL=ON

//Compile with pedantic enabled.
LLVM_ENABLE_PEDANTIC:BOOL=ON

//Enable per-target runtimes directory
LLVM_ENABLE_PER_TARGET_RUNTIME_DIR:BOOL=OFF

//Build Position-Independent Code
LLVM_ENABLE_PIC:BOOL=ON

//Semicolon-separated list of projects to build (clang;libcxx;libcxxabi;libunwind;lldb;compiler-rt;lld;polly;debuginfo-tests),
// or "all".
LLVM_ENABLE_PROJECTS:STRING=

//Enable run time type information
LLVM_ENABLE_RTTI:BOOL=OFF

//Semicolon-separated list of runtimes to build (libcxx;libcxxabi;libunwind;compiler-rt),
// or "all".
LLVM_ENABLE_RUNTIMES:STRING=

//Use Sphinx to generate llvm documentation.
LLVM_ENABLE_SPHINX:BOOL=OFF

//Use terminfo database if available.
LLVM_ENABLE_TERMINFO:BOOL=ON

//Use threads if available.
LLVM_ENABLE_THREADS:BOOL=ON

//Enable compiler warnings.
LLVM_ENABLE_WARNINGS:BOOL=ON

//Fail and stop if a warning is triggered.
LLVM_ENABLE_WERROR:BOOL=OFF

//Use zlib for compression/decompression if available.
LLVM_ENABLE_ZLIB:BOOL=ON

//Semicolon-separated list of experimental targets to build.
LLVM_EXPERIMENTAL_TARGETS_TO_BUILD:STRING=

//Export symbols from LLVM tools so that plugins can import them
LLVM_EXPORT_SYMBOLS_FOR_PLUGINS:BOOL=OFF

//Generate dSYM files and strip executables and libraries (Darwin
// Only)
LLVM_EXTERNALIZE_DEBUGINFO:BOOL=OFF

//Path to clang-tools-extra source directory
LLVM_EXTERNAL_CLANG_TOOLS_EXTRA_SOURCE_DIR:PATH=

//Path to debuginfo-tests source directory
LLVM_EXTERNAL_DEBUGINFO_TESTS_SOURCE_DIR:PATH=

//Path to dragonegg source directory
LLVM_EXTERNAL_DRAGONEGG_SOURCE_DIR:PATH=

//Command used to spawn lit
LLVM_EXTERNAL_LIT:STRING=

//Path to lldb source directory
LLVM_EXTERNAL_LLDB_SOURCE_DIR:PATH=

//Path to lld source directory
LLVM_EXTERNAL_LLD_SOURCE_DIR:PATH=

//Path to llgo source directory
LLVM_EXTERNAL_LLGO_SOURCE_DIR:PATH=

//Path to parallel-libs source directory
LLVM_EXTERNAL_PARALLEL_LIBS_SOURCE_DIR:PATH=

//Path to pstl source directory
LLVM_EXTERNAL_PSTL_SOURCE_DIR:PATH=

//Path to a program.
LLVM_FILECHECK_EXE:FILEPATH=LLVM_FILECHECK_EXE-NOTFOUND

//Enable statistics collection for builds that wouldn't normally
// enable it
LLVM_FORCE_ENABLE_STATS:BOOL=OFF

//Set to ON to force using an old, unsupported host toolchain.
LLVM_FORCE_USE_OLD_TOOLCHAIN:BOOL=OFF

//Host on which LLVM binaries will run
LLVM_HOST_TRIPLE:STRING=x86_64-apple-darwin17.7.0

//Generate benchmark targets. If OFF, benchmarks can't be built.
LLVM_INCLUDE_BENCHMARKS:BOOL=ON

//Generate build targets for llvm documentation.
LLVM_INCLUDE_DOCS:BOOL=ON

//Generate build targets for the LLVM examples
LLVM_INCLUDE_EXAMPLES:BOOL=ON

//Include the Go bindings tests in test build targets.
LLVM_INCLUDE_GO_TESTS:BOOL=ON

//Generate build targets for the LLVM runtimes.
LLVM_INCLUDE_RUNTIMES:BOOL=ON

//Generate build targets for the LLVM unit tests.
LLVM_INCLUDE_TESTS:BOOL=ON

//Generate build targets for the LLVM tools.
LLVM_INCLUDE_TOOLS:BOOL=ON

//Generate build targets for the LLVM utils.
LLVM_INCLUDE_UTILS:BOOL=ON

//Install symlinks from the binutils tool names to the corresponding
// LLVM tools.
LLVM_INSTALL_BINUTILS_SYMLINKS:BOOL=OFF

//Doxygen-generated HTML documentation install directory
LLVM_INSTALL_DOXYGEN_HTML_DIR:STRING=share/doc/llvm/doxygen-html

//Install the modulemap files in the 'install' target.
LLVM_INSTALL_MODULEMAPS:BOOL=OFF

//OCamldoc-generated HTML documentation install directory
LLVM_INSTALL_OCAMLDOC_HTML_DIR:STRING=share/doc/llvm/ocaml-html

//Only include toolchain files in the 'install' target.
LLVM_INSTALL_TOOLCHAIN_ONLY:BOOL=OFF

//Include utility binaries in the 'install' target.
LLVM_INSTALL_UTILS:BOOL=OFF

//Define suffix of library directory name (32/64)
LLVM_LIBDIR_SUFFIX:STRING=

//Path to fuzzing library for linking with fuzz targets
LLVM_LIB_FUZZING_ENGINE:PATH=

//Link tools against the libllvm dynamic library
LLVM_LINK_LLVM_DYLIB:BOOL=OFF

//Default options for lit
LLVM_LIT_ARGS:STRING=-sv

//Path to LLVM source tree
LLVM_MAIN_SRC_DIR:PATH=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source

//Force TableGen to be built with optimization
LLVM_OPTIMIZED_TABLEGEN:BOOL=OFF

//Pass -O1 on debug sanitizer builds
LLVM_OPTIMIZE_SANITIZED_BUILDS:BOOL=ON

//Define the maximum number of concurrent compilation jobs (Ninja
// only).
LLVM_PARALLEL_COMPILE_JOBS:STRING=

//Define the maximum number of concurrent link jobs (Ninja only).
LLVM_PARALLEL_LINK_JOBS:STRING=

//Build LLVM with Polly
LLVM_POLLY_BUILD:BOOL=ON

//Statically link Polly into tools (if available)
LLVM_POLLY_LINK_INTO_TOOLS:BOOL=ON

//Profiling data file to use when compiling in order to improve
// runtime performance.
LLVM_PROFDATA_FILE:FILEPATH=

//Path to a library.
LLVM_PTHREAD_LIBRARY_PATH:FILEPATH=/usr/lib/libpthread.dylib

//Value Computed by CMake
LLVM_SOURCE_DIR:STATIC=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source

//.spec file to use for srpm generation
LLVM_SRPM_USER_BINARY_SPECFILE:FILEPATH=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source/llvm.spec.in

//Native TableGen executable. Saves building one when cross-compiling.
LLVM_TABLEGEN:STRING=llvm-tblgen

//Semicolon-separated list of targets to build, or "all".
LLVM_TARGETS_TO_BUILD:STRING=all

//Set target to use for LLVM JIT or use "host" for automatic detection.
LLVM_TARGET_ARCH:STRING=host

//The name of environment variable to override default target.
// Disabled by blank.
LLVM_TARGET_TRIPLE_ENV:STRING=

//Set to ON to only warn when using a toolchain which is about
// to be deprecated, instead of emitting an error.
LLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN:BOOL=OFF

//Path for binary subdirectory (defaults to 'bin')
LLVM_TOOLS_INSTALL_DIR:STRING=bin

//Whether to build bugpoint as part of LLVM
LLVM_TOOL_BUGPOINT_BUILD:BOOL=ON

//Whether to build bugpoint-passes as part of LLVM
LLVM_TOOL_BUGPOINT_PASSES_BUILD:BOOL=ON

//Whether to build clang as part of LLVM
LLVM_TOOL_CLANG_BUILD:BOOL=ON

//Whether to build clang-tools-extra as part of LLVM
LLVM_TOOL_CLANG_TOOLS_EXTRA_BUILD:BOOL=OFF

//Whether to build compiler-rt as part of LLVM
LLVM_TOOL_COMPILER_RT_BUILD:BOOL=ON

//Whether to build debuginfo-tests as part of LLVM
LLVM_TOOL_DEBUGINFO_TESTS_BUILD:BOOL=OFF

//Whether to build dragonegg as part of LLVM
LLVM_TOOL_DRAGONEGG_BUILD:BOOL=OFF

//Whether to build dsymutil as part of LLVM
LLVM_TOOL_DSYMUTIL_BUILD:BOOL=ON

//Whether to build gold as part of LLVM
LLVM_TOOL_GOLD_BUILD:BOOL=ON

//Whether to build libcxxabi as part of LLVM
LLVM_TOOL_LIBCXXABI_BUILD:BOOL=ON

//Whether to build libcxx as part of LLVM
LLVM_TOOL_LIBCXX_BUILD:BOOL=ON

//Whether to build libunwind as part of LLVM
LLVM_TOOL_LIBUNWIND_BUILD:BOOL=ON

//Whether to build llc as part of LLVM
LLVM_TOOL_LLC_BUILD:BOOL=ON

//Whether to build lldb as part of LLVM
LLVM_TOOL_LLDB_BUILD:BOOL=OFF

//Whether to build lld as part of LLVM
LLVM_TOOL_LLD_BUILD:BOOL=OFF

//Whether to build llgo as part of LLVM
LLVM_TOOL_LLGO_BUILD:BOOL=OFF

//Whether to build lli as part of LLVM
LLVM_TOOL_LLI_BUILD:BOOL=ON

//Whether to build llvm-ar as part of LLVM
LLVM_TOOL_LLVM_AR_BUILD:BOOL=ON

//Whether to build llvm-as as part of LLVM
LLVM_TOOL_LLVM_AS_BUILD:BOOL=ON

//Whether to build llvm-as-fuzzer as part of LLVM
LLVM_TOOL_LLVM_AS_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-bcanalyzer as part of LLVM
LLVM_TOOL_LLVM_BCANALYZER_BUILD:BOOL=ON

//Whether to build llvm-cat as part of LLVM
LLVM_TOOL_LLVM_CAT_BUILD:BOOL=ON

//Whether to build llvm-cfi-verify as part of LLVM
LLVM_TOOL_LLVM_CFI_VERIFY_BUILD:BOOL=ON

//Whether to build llvm-config as part of LLVM
LLVM_TOOL_LLVM_CONFIG_BUILD:BOOL=ON

//Whether to build llvm-cov as part of LLVM
LLVM_TOOL_LLVM_COV_BUILD:BOOL=ON

//Whether to build llvm-cvtres as part of LLVM
LLVM_TOOL_LLVM_CVTRES_BUILD:BOOL=ON

//Whether to build llvm-cxxdump as part of LLVM
LLVM_TOOL_LLVM_CXXDUMP_BUILD:BOOL=ON

//Whether to build llvm-cxxfilt as part of LLVM
LLVM_TOOL_LLVM_CXXFILT_BUILD:BOOL=ON

//Whether to build llvm-cxxmap as part of LLVM
LLVM_TOOL_LLVM_CXXMAP_BUILD:BOOL=ON

//Whether to build llvm-c-test as part of LLVM
LLVM_TOOL_LLVM_C_TEST_BUILD:BOOL=ON

//Whether to build llvm-diff as part of LLVM
LLVM_TOOL_LLVM_DIFF_BUILD:BOOL=ON

//Whether to build llvm-dis as part of LLVM
LLVM_TOOL_LLVM_DIS_BUILD:BOOL=ON

//Whether to build llvm-dwarfdump as part of LLVM
LLVM_TOOL_LLVM_DWARFDUMP_BUILD:BOOL=ON

//Whether to build llvm-dwp as part of LLVM
LLVM_TOOL_LLVM_DWP_BUILD:BOOL=ON

//Whether to build llvm-elfabi as part of LLVM
LLVM_TOOL_LLVM_ELFABI_BUILD:BOOL=ON

//Whether to build llvm-exegesis as part of LLVM
LLVM_TOOL_LLVM_EXEGESIS_BUILD:BOOL=ON

//Whether to build llvm-extract as part of LLVM
LLVM_TOOL_LLVM_EXTRACT_BUILD:BOOL=ON

//Whether to build llvm-go as part of LLVM
LLVM_TOOL_LLVM_GO_BUILD:BOOL=ON

//Whether to build llvm-isel-fuzzer as part of LLVM
LLVM_TOOL_LLVM_ISEL_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-itanium-demangle-fuzzer as part of LLVM
LLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD:BOOL=ON

//Whether to build LLVM_JITLISTENER as part of LLVM
LLVM_TOOL_LLVM_JITLISTENER_BUILD:BOOL=ON

//Whether to build llvm-link as part of LLVM
LLVM_TOOL_LLVM_LINK_BUILD:BOOL=ON

//Whether to build llvm-lto2 as part of LLVM
LLVM_TOOL_LLVM_LTO2_BUILD:BOOL=ON

//Whether to build llvm-lto as part of LLVM
LLVM_TOOL_LLVM_LTO_BUILD:BOOL=ON

//Whether to build llvm-mca as part of LLVM
LLVM_TOOL_LLVM_MCA_BUILD:BOOL=ON

//Whether to build llvm-mc-assemble-fuzzer as part of LLVM
LLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-mc as part of LLVM
LLVM_TOOL_LLVM_MC_BUILD:BOOL=ON

//Whether to build llvm-mc-disassemble-fuzzer as part of LLVM
LLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-microsoft-demangle-fuzzer as part of LLVM
LLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-modextract as part of LLVM
LLVM_TOOL_LLVM_MODEXTRACT_BUILD:BOOL=ON

//Whether to build llvm-mt as part of LLVM
LLVM_TOOL_LLVM_MT_BUILD:BOOL=ON

//Whether to build llvm-nm as part of LLVM
LLVM_TOOL_LLVM_NM_BUILD:BOOL=ON

//Whether to build llvm-objcopy as part of LLVM
LLVM_TOOL_LLVM_OBJCOPY_BUILD:BOOL=ON

//Whether to build llvm-objdump as part of LLVM
LLVM_TOOL_LLVM_OBJDUMP_BUILD:BOOL=ON

//Whether to build llvm-opt-fuzzer as part of LLVM
LLVM_TOOL_LLVM_OPT_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-opt-report as part of LLVM
LLVM_TOOL_LLVM_OPT_REPORT_BUILD:BOOL=ON

//Whether to build llvm-pdbutil as part of LLVM
LLVM_TOOL_LLVM_PDBUTIL_BUILD:BOOL=ON

//Whether to build llvm-profdata as part of LLVM
LLVM_TOOL_LLVM_PROFDATA_BUILD:BOOL=ON

//Whether to build llvm-rc as part of LLVM
LLVM_TOOL_LLVM_RC_BUILD:BOOL=ON

//Whether to build llvm-readobj as part of LLVM
LLVM_TOOL_LLVM_READOBJ_BUILD:BOOL=ON

//Whether to build llvm-rtdyld as part of LLVM
LLVM_TOOL_LLVM_RTDYLD_BUILD:BOOL=ON

//Whether to build LLVM_SHLIB as part of LLVM
LLVM_TOOL_LLVM_SHLIB_BUILD:BOOL=ON

//Whether to build llvm-size as part of LLVM
LLVM_TOOL_LLVM_SIZE_BUILD:BOOL=ON

//Whether to build llvm-special-case-list-fuzzer as part of LLVM
LLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-split as part of LLVM
LLVM_TOOL_LLVM_SPLIT_BUILD:BOOL=ON

//Whether to build llvm-stress as part of LLVM
LLVM_TOOL_LLVM_STRESS_BUILD:BOOL=ON

//Whether to build llvm-strings as part of LLVM
LLVM_TOOL_LLVM_STRINGS_BUILD:BOOL=ON

//Whether to build llvm-symbolizer as part of LLVM
LLVM_TOOL_LLVM_SYMBOLIZER_BUILD:BOOL=ON

//Whether to build llvm-undname as part of LLVM
LLVM_TOOL_LLVM_UNDNAME_BUILD:BOOL=ON

//Whether to build llvm-xray as part of LLVM
LLVM_TOOL_LLVM_XRAY_BUILD:BOOL=ON

//Whether to build llvm-yaml-numeric-parser-fuzzer as part of LLVM
LLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD:BOOL=ON

//Whether to build lto as part of LLVM
LLVM_TOOL_LTO_BUILD:BOOL=ON

//Whether to build obj2yaml as part of LLVM
LLVM_TOOL_OBJ2YAML_BUILD:BOOL=ON

//Whether to build openmp as part of LLVM
LLVM_TOOL_OPENMP_BUILD:BOOL=ON

//Whether to build opt as part of LLVM
LLVM_TOOL_OPT_BUILD:BOOL=ON

//Whether to build opt-remarks as part of LLVM
LLVM_TOOL_OPT_REMARKS_BUILD:BOOL=ON

//Whether to build opt-viewer as part of LLVM
LLVM_TOOL_OPT_VIEWER_BUILD:BOOL=ON

//Whether to build parallel-libs as part of LLVM
LLVM_TOOL_PARALLEL_LIBS_BUILD:BOOL=OFF

//Whether to build pstl as part of LLVM
LLVM_TOOL_PSTL_BUILD:BOOL=OFF

//Whether to build sancov as part of LLVM
LLVM_TOOL_SANCOV_BUILD:BOOL=ON

//Whether to build sanstats as part of LLVM
LLVM_TOOL_SANSTATS_BUILD:BOOL=ON

//Whether to build verify-uselistorder as part of LLVM
LLVM_TOOL_VERIFY_USELISTORDER_BUILD:BOOL=ON

//Whether to build xcode-toolchain as part of LLVM
LLVM_TOOL_XCODE_TOOLCHAIN_BUILD:BOOL=ON

//Whether to build yaml2obj as part of LLVM
LLVM_TOOL_YAML2OBJ_BUILD:BOOL=ON

//Enable solution folders in Visual Studio. Disable for Express
// versions.
LLVM_USE_FOLDERS:BOOL=ON

//Use Intel JIT API to inform Intel(R) VTune(TM) Amplifier XE 2011
// about JIT code
LLVM_USE_INTEL_JITEVENTS:BOOL=OFF

//Use opagent JIT interface to inform OProfile about JIT code
LLVM_USE_OPROFILE:BOOL=OFF

//Use perf JIT interface to inform perf about JIT code
LLVM_USE_PERF:BOOL=OFF

//Define the sanitizer used to build binaries and tests.
LLVM_USE_SANITIZER:STRING=

//Use -gsplit-dwarf when compiling llvm.
LLVM_USE_SPLIT_DWARF:BOOL=OFF

//Path to install LLVM utilities (enabled by LLVM_INSTALL_UTILS=ON)
// (defaults to LLVM_TOOLS_INSTALL_DIR)
LLVM_UTILS_INSTALL_DIR:STRING=bin

//Show target and host info when tools are invoked with --version.
LLVM_VERSION_PRINTER_SHOW_HOST_TARGET_INFO:BOOL=ON

//Dependencies for the target
LTO_LIB_DEPENDS:STATIC=general;LLVMAArch64CodeGen;general;LLVMAArch64AsmParser;general;LLVMAArch64AsmPrinter;general;LLVMAArch64Desc;general;LLVMAArch64Disassembler;general;LLVMAArch64Info;general;LLVMAArch64Utils;general;LLVMAMDGPUCodeGen;general;LLVMAMDGPUAsmParser;general;LLVMAMDGPUAsmPrinter;general;LLVMAMDGPUDesc;general;LLVMAMDGPUDisassembler;general;LLVMAMDGPUInfo;general;LLVMAMDGPUUtils;general;LLVMARMCodeGen;general;LLVMARMAsmParser;general;LLVMARMAsmPrinter;general;LLVMARMDesc;general;LLVMARMDisassembler;general;LLVMARMInfo;general;LLVMARMUtils;general;LLVMBPFCodeGen;general;LLVMBPFAsmParser;general;LLVMBPFAsmPrinter;general;LLVMBPFDesc;general;LLVMBPFDisassembler;general;LLVMBPFInfo;general;LLVMHexagonCodeGen;general;LLVMHexagonAsmParser;general;LLVMHexagonDesc;general;LLVMHexagonDisassembler;general;LLVMHexagonInfo;general;LLVMLanaiCodeGen;general;LLVMLanaiAsmParser;general;LLVMLanaiAsmPrinter;general;LLVMLanaiDesc;general;LLVMLanaiDisassembler;general;LLVMLanaiInfo;general;LLVMMipsCodeGen;general;LLVMMipsAsmParser;general;LLVMMipsAsmPrinter;general;LLVMMipsDesc;general;LLVMMipsDisassembler;general;LLVMMipsInfo;general;LLVMMSP430CodeGen;general;LLVMMSP430AsmParser;general;LLVMMSP430AsmPrinter;general;LLVMMSP430Desc;general;LLVMMSP430Disassembler;general;LLVMMSP430Info;general;LLVMNVPTXCodeGen;general;LLVMNVPTXAsmPrinter;general;LLVMNVPTXDesc;general;LLVMNVPTXInfo;general;LLVMPowerPCCodeGen;general;LLVMPowerPCAsmParser;general;LLVMPowerPCAsmPrinter;general;LLVMPowerPCDesc;general;LLVMPowerPCDisassembler;general;LLVMPowerPCInfo;general;LLVMSparcCodeGen;general;LLVMSparcAsmParser;general;LLVMSparcAsmPrinter;general;LLVMSparcDesc;general;LLVMSparcDisassembler;general;LLVMSparcInfo;general;LLVMSystemZCodeGen;general;LLVMSystemZAsmParser;general;LLVMSystemZAsmPrinter;general;LLVMSystemZDesc;general;LLVMSystemZDisassembler;general;LLVMSystemZInfo;general;LLVMWebAssemblyCodeGen;general;LLVMWebAssemblyAsmParser;general;LLVMWebAssemblyAsmPrinter;general;LLVMWebAssemblyDesc;general;LLVMWebAssemblyDisassembler;general;LLVMWebAssemblyInfo;general;LLVMX86CodeGen;general;LLVMX86AsmParser;general;LLVMX86AsmPrinter;general;LLVMX86Desc;general;LLVMX86Disassembler;general;LLVMX86Info;general;LLVMX86Utils;general;LLVMXCoreCodeGen;general;LLVMXCoreAsmPrinter;general;LLVMXCoreDesc;general;LLVMXCoreDisassembler;general;LLVMXCoreInfo;general;LLVMBitReader;general;LLVMCore;general;LLVMLTO;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;general;LLVMTarget;

//Path to a program.
OCAMLFIND:FILEPATH=OCAMLFIND-NOTFOUND

//Enable building libomptarget for offloading.
OPENMP_ENABLE_LIBOMPTARGET:BOOL=OFF

//Extra compiler flags to send to the test compiler.
OPENMP_TEST_FLAGS:STRING=

//OpenMP compiler flag to use for testing OpenMP runtime libraries.
OPENMP_TEST_OPENMP_FLAGS:STRING=-fopenmp -fno-experimental-isel

//Dependencies for the target
OptRemarks_LIB_DEPENDS:STATIC=general;LLVMOptRemarks;

//Path to a program.
PERL_EXECUTABLE:FILEPATH=/usr/bin/perl

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/local/bin/pkg-config

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=/usr/local/bin/python2.7

//Allow use of C++ ABI details in ubsan
SANITIZER_ALLOW_CXXABI:BOOL=ON

//Specify C++ ABI library to use.
SANITIZER_CXX_ABI:STRING=default

//Path to sphinx-build executable
SPHINX_EXECUTABLE:FILEPATH=/Users/silence/anaconda3/bin/sphinx-build

//Output standalone HTML files
SPHINX_OUTPUT_HTML:BOOL=ON

//Output man pages
SPHINX_OUTPUT_MAN:BOOL=ON

//When building documentation treat warnings as errors
SPHINX_WARNINGS_AS_ERRORS:BOOL=ON

//Plist name
TOOL_INFO_PLIST:STRING=Info.plist

//Path to a program.
Z3_EXECUTABLE:FILEPATH=Z3_EXECUTABLE-NOTFOUND

//Path to a file.
Z3_INCLUDE_DIR:PATH=Z3_INCLUDE_DIR-NOTFOUND

//Path to a library.
Z3_LIBRARIES:FILEPATH=Z3_LIBRARIES-NOTFOUND

//Value Computed by CMake
benchmark_BINARY_DIR:STATIC=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Build/utils/benchmark

//Value Computed by CMake
benchmark_SOURCE_DIR:STATIC=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source/utils/benchmark

//Dependencies for the target
benchmark_main_LIB_DEPENDS:STATIC=general;benchmark;

//Dependencies for the target
clang_rt.lsan_ios_dynamic_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.lsan_iossim_dynamic_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.lsan_osx_dynamic_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.stats_ios_dynamic_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.stats_iossim_dynamic_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.stats_osx_dynamic_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.tsan_ios_dynamic_LIB_DEPENDS:STATIC=general;c;general;objc;

//Dependencies for the target
clang_rt.tsan_iossim_dynamic_LIB_DEPENDS:STATIC=general;c;general;objc;

//Dependencies for the target
clang_rt.tsan_osx_dynamic_LIB_DEPENDS:STATIC=general;c;general;objc;

//Dependencies for the target
clang_rt.ubsan_minimal_ios_dynamic_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.ubsan_minimal_iossim_dynamic_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.ubsan_minimal_osx_dynamic_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.xray-basic_osx_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.xray-fdr_osx_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.xray-profiling_osx_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
clang_rt.xray_osx_LIB_DEPENDS:STATIC=general;c;

//Dependencies for the target
cxx_experimental_LIB_DEPENDS:STATIC=general;cxx_shared;

//Dependencies for the target
cxx_filesystem_LIB_DEPENDS:STATIC=general;cxx_shared;

//Dependencies for the target
cxx_shared_LIB_DEPENDS:STATIC=general;cxxabi_shared;general;pthread;general;c;general;m;

//Dependencies for the target
cxx_static_LIB_DEPENDS:STATIC=general;cxxabi_shared;general;pthread;general;c;general;m;

//Dependencies for the target
cxxabi_shared_LIB_DEPENDS:STATIC=general;pthread;general;c;

//Dependencies for the target
cxxabi_static_LIB_DEPENDS:STATIC=general;pthread;general;c;

//Path to a program.
git_executable:FILEPATH=/usr/bin/git

//Dependencies for the target
libclang_LIB_DEPENDS:STATIC=general;clangAST;general;clangBasic;general;clangFrontend;general;clangIndex;general;clangLex;general;clangSema;general;clangSerialization;general;clangTooling;general;clangARCMigrate;general;dl;general;LLVMAArch64CodeGen;general;LLVMAArch64AsmParser;general;LLVMAArch64AsmPrinter;general;LLVMAArch64Desc;general;LLVMAArch64Disassembler;general;LLVMAArch64Info;general;LLVMAArch64Utils;general;LLVMAMDGPUCodeGen;general;LLVMAMDGPUAsmParser;general;LLVMAMDGPUAsmPrinter;general;LLVMAMDGPUDesc;general;LLVMAMDGPUDisassembler;general;LLVMAMDGPUInfo;general;LLVMAMDGPUUtils;general;LLVMARMCodeGen;general;LLVMARMAsmParser;general;LLVMARMAsmPrinter;general;LLVMARMDesc;general;LLVMARMDisassembler;general;LLVMARMInfo;general;LLVMARMUtils;general;LLVMBPFCodeGen;general;LLVMBPFAsmParser;general;LLVMBPFAsmPrinter;general;LLVMBPFDesc;general;LLVMBPFDisassembler;general;LLVMBPFInfo;general;LLVMHexagonCodeGen;general;LLVMHexagonAsmParser;general;LLVMHexagonDesc;general;LLVMHexagonDisassembler;general;LLVMHexagonInfo;general;LLVMLanaiCodeGen;general;LLVMLanaiAsmParser;general;LLVMLanaiAsmPrinter;general;LLVMLanaiDesc;general;LLVMLanaiDisassembler;general;LLVMLanaiInfo;general;LLVMMipsCodeGen;general;LLVMMipsAsmParser;general;LLVMMipsAsmPrinter;general;LLVMMipsDesc;general;LLVMMipsDisassembler;general;LLVMMipsInfo;general;LLVMMSP430CodeGen;general;LLVMMSP430AsmParser;general;LLVMMSP430AsmPrinter;general;LLVMMSP430Desc;general;LLVMMSP430Disassembler;general;LLVMMSP430Info;general;LLVMNVPTXCodeGen;general;LLVMNVPTXAsmPrinter;general;LLVMNVPTXDesc;general;LLVMNVPTXInfo;general;LLVMPowerPCCodeGen;general;LLVMPowerPCAsmParser;general;LLVMPowerPCAsmPrinter;general;LLVMPowerPCDesc;general;LLVMPowerPCDisassembler;general;LLVMPowerPCInfo;general;LLVMSparcCodeGen;general;LLVMSparcAsmParser;general;LLVMSparcAsmPrinter;general;LLVMSparcDesc;general;LLVMSparcDisassembler;general;LLVMSparcInfo;general;LLVMSystemZCodeGen;general;LLVMSystemZAsmParser;general;LLVMSystemZAsmPrinter;general;LLVMSystemZDesc;general;LLVMSystemZDisassembler;general;LLVMSystemZInfo;general;LLVMWebAssemblyCodeGen;general;LLVMWebAssemblyAsmParser;general;LLVMWebAssemblyAsmPrinter;general;LLVMWebAssemblyDesc;general;LLVMWebAssemblyDisassembler;general;LLVMWebAssemblyInfo;general;LLVMX86CodeGen;general;LLVMX86AsmParser;general;LLVMX86AsmPrinter;general;LLVMX86Desc;general;LLVMX86Disassembler;general;LLVMX86Info;general;LLVMX86Utils;general;LLVMXCoreCodeGen;general;LLVMXCoreAsmPrinter;general;LLVMXCoreDesc;general;LLVMXCoreDisassembler;general;LLVMXCoreInfo;general;LLVMCore;general;LLVMSupport;

//Path to a library.
pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/usr/lib/libxml2.dylib

//Dependencies for the target
unwind_shared_LIB_DEPENDS:STATIC=general;c;general;dl;general;pthread;

//Dependencies for the target
unwind_static_LIB_DEPENDS:STATIC=general;c;general;dl;general;pthread;


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: BENCHMARK_CXX_FLAGS_COVERAGE
BENCHMARK_CXX_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BENCHMARK_EXE_LINKER_FLAGS_COVERAGE
BENCHMARK_EXE_LINKER_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BENCHMARK_SHARED_LINKER_FLAGS_COVERAGE
BENCHMARK_SHARED_LINKER_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_HEADER
Backtrace_HEADER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_INCLUDE_DIR
Backtrace_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_LIBRARY
Backtrace_LIBRARY-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
CAN_TARGET_ios_arm64:INTERNAL=TRUE
//Result of TRY_COMPILE
CAN_TARGET_ios_arm64_32:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_ios_arm64e:INTERNAL=TRUE
//Result of TRY_COMPILE
CAN_TARGET_ios_armv6:INTERNAL=TRUE
//Result of TRY_COMPILE
CAN_TARGET_ios_armv6m:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_ios_armv7:INTERNAL=TRUE
//Result of TRY_COMPILE
CAN_TARGET_ios_armv7em:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_ios_armv7k:INTERNAL=TRUE
//Result of TRY_COMPILE
CAN_TARGET_ios_armv7m:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_ios_armv7s:INTERNAL=TRUE
//Result of TRY_COMPILE
CAN_TARGET_ios_i386:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_ios_x86_64:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_ios_x86_64h:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_arm64:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_arm64_32:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_arm64e:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_armv6:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_armv6m:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_armv7:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_armv7em:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_armv7k:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_armv7m:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_armv7s:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_iossim_i386:INTERNAL=TRUE
//Result of TRY_COMPILE
CAN_TARGET_iossim_x86_64:INTERNAL=TRUE
//Result of TRY_COMPILE
CAN_TARGET_osx_arm64:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_arm64_32:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_arm64e:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_armv6:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_armv6m:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_armv7:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_armv7em:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_armv7k:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_armv7m:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_armv7s:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_i386:INTERNAL=FALSE
//Result of TRY_COMPILE
CAN_TARGET_osx_x86_64:INTERNAL=TRUE
//Result of TRY_COMPILE
CAN_TARGET_osx_x86_64h:INTERNAL=TRUE
//ADVANCED property for variable: CLANG_EXECUTABLE_VERSION
CLANG_EXECUTABLE_VERSION-ADVANCED:INTERNAL=1
//Have include sys/resource.h
CLANG_HAVE_RLIMITS:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_ARCMT_TEST_BUILD
CLANG_TOOL_ARCMT_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_CHECK_BUILD
CLANG_TOOL_CLANG_CHECK_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_DIFF_BUILD
CLANG_TOOL_CLANG_DIFF_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_EXTDEF_MAPPING_BUILD
CLANG_TOOL_CLANG_EXTDEF_MAPPING_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_FORMAT_BUILD
CLANG_TOOL_CLANG_FORMAT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_FORMAT_VS_BUILD
CLANG_TOOL_CLANG_FORMAT_VS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_FUZZER_BUILD
CLANG_TOOL_CLANG_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_IMPORT_TEST_BUILD
CLANG_TOOL_CLANG_IMPORT_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD
CLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_REFACTOR_BUILD
CLANG_TOOL_CLANG_REFACTOR_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_RENAME_BUILD
CLANG_TOOL_CLANG_RENAME_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_C_ARCMT_TEST_BUILD
CLANG_TOOL_C_ARCMT_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_C_INDEX_TEST_BUILD
CLANG_TOOL_C_INDEX_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_DIAGTOOL_BUILD
CLANG_TOOL_DIAGTOOL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_DRIVER_BUILD
CLANG_TOOL_DRIVER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_LIBCLANG_BUILD
CLANG_TOOL_LIBCLANG_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_SCAN_BUILD_BUILD
CLANG_TOOL_SCAN_BUILD_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_SCAN_VIEW_BUILD
CLANG_TOOL_SCAN_VIEW_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=15
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.15.2/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.15.2/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.15.2/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Source
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=481
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/local/Cellar/cmake/3.15.2/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_BUILTINS
COMPILER_RT_BUILD_BUILTINS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_LIBFUZZER
COMPILER_RT_BUILD_LIBFUZZER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_PROFILE
COMPILER_RT_BUILD_PROFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_SANITIZERS
COMPILER_RT_BUILD_SANITIZERS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_XRAY
COMPILER_RT_BUILD_XRAY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_XRAY_NO_PREINIT
COMPILER_RT_BUILD_XRAY_NO_PREINIT-ADVANCED:INTERNAL=1
//Test COMPILER_RT_HAS_APP_EXTENSION
COMPILER_RT_HAS_APP_EXTENSION:INTERNAL=1
//Compiler supports 
COMPILER_RT_HAS_ATOMIC_KEYWORD:INTERNAL=True
//Test COMPILER_RT_HAS_FFREESTANDING_FLAG
COMPILER_RT_HAS_FFREESTANDING_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FNO_BUILTIN_FLAG
COMPILER_RT_HAS_FNO_BUILTIN_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FNO_EXCEPTIONS_FLAG
COMPILER_RT_HAS_FNO_EXCEPTIONS_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FNO_FUNCTION_SECTIONS_FLAG
COMPILER_RT_HAS_FNO_FUNCTION_SECTIONS_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FNO_LTO_FLAG
COMPILER_RT_HAS_FNO_LTO_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FNO_RTTI_FLAG
COMPILER_RT_HAS_FNO_RTTI_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FNO_SANITIZE_SAFE_STACK_FLAG
COMPILER_RT_HAS_FNO_SANITIZE_SAFE_STACK_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FNO_STACK_PROTECTOR_FLAG
COMPILER_RT_HAS_FNO_STACK_PROTECTOR_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FOMIT_FRAME_POINTER_FLAG
COMPILER_RT_HAS_FOMIT_FRAME_POINTER_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FPIC_FLAG
COMPILER_RT_HAS_FPIC_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FPIE_FLAG
COMPILER_RT_HAS_FPIE_FLAG:INTERNAL=1
//Compiler supports -ffreestanding
COMPILER_RT_HAS_FREESTANDING_FLAG:INTERNAL=True
//Test COMPILER_RT_HAS_FRTTI_FLAG
COMPILER_RT_HAS_FRTTI_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FTLS_MODEL_INITIAL_EXEC
COMPILER_RT_HAS_FTLS_MODEL_INITIAL_EXEC:INTERNAL=1
//Have symbol __func__
COMPILER_RT_HAS_FUNC_SYMBOL:INTERNAL=1
//Test COMPILER_RT_HAS_FUNWIND_TABLES_FLAG
COMPILER_RT_HAS_FUNWIND_TABLES_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FVISIBILITY_HIDDEN_FLAG
COMPILER_RT_HAS_FVISIBILITY_HIDDEN_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FVISIBILITY_INLINES_HIDDEN_FLAG
COMPILER_RT_HAS_FVISIBILITY_INLINES_HIDDEN_FLAG:INTERNAL=1
//Have library gcc_s
COMPILER_RT_HAS_GCC_S_LIB:INTERNAL=
//Test COMPILER_RT_HAS_GLINE_TABLES_ONLY_FLAG
COMPILER_RT_HAS_GLINE_TABLES_ONLY_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_GR_FLAG
COMPILER_RT_HAS_GR_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_GS_FLAG
COMPILER_RT_HAS_GS_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_G_FLAG
COMPILER_RT_HAS_G_FLAG:INTERNAL=1
//Have library c
COMPILER_RT_HAS_LIBC:INTERNAL=1
//Have library c++
COMPILER_RT_HAS_LIBCXX:INTERNAL=1
//Have library dl
COMPILER_RT_HAS_LIBDL:INTERNAL=1
//Have library execinfo
COMPILER_RT_HAS_LIBEXECINFO:INTERNAL=
//Have library m
COMPILER_RT_HAS_LIBM:INTERNAL=1
//Have library pthread
COMPILER_RT_HAS_LIBPTHREAD:INTERNAL=1
//Have library rt
COMPILER_RT_HAS_LIBRT:INTERNAL=
//Have library stdc++
COMPILER_RT_HAS_LIBSTDCXX:INTERNAL=1
//Test COMPILER_RT_HAS_MCRC_FLAG
COMPILER_RT_HAS_MCRC_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_MSSE3_FLAG
COMPILER_RT_HAS_MSSE3_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_MSSE4_2_FLAG
COMPILER_RT_HAS_MSSE4_2_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_MT_FLAG
COMPILER_RT_HAS_MT_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_NODEFAULTLIBS_FLAG
COMPILER_RT_HAS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Compiler supports -fomit-frame-pointer
COMPILER_RT_HAS_OMIT_FRAME_POINTER_FLAG:INTERNAL=True
//Test COMPILER_RT_HAS_Oy_FLAG
COMPILER_RT_HAS_Oy_FLAG:INTERNAL=
//Compiler supports -std=c11
COMPILER_RT_HAS_STD_C11_FLAG:INTERNAL=True
//Test COMPILER_RT_HAS_STD_CXX11_FLAG
COMPILER_RT_HAS_STD_CXX11_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_SYSROOT_FLAG
COMPILER_RT_HAS_SYSROOT_FLAG:INTERNAL=1
//Have library curses
COMPILER_RT_HAS_TERMINFO_CURSES:INTERNAL=1
//Have library terminfo
COMPILER_RT_HAS_TERMINFO_TERMINFO:INTERNAL=
//Have library tinfo
COMPILER_RT_HAS_TERMINFO_TINFO:INTERNAL=
//Compiler supports -fvisibility=hidden
COMPILER_RT_HAS_VISIBILITY_HIDDEN_FLAG:INTERNAL=True
//Test COMPILER_RT_HAS_W4_FLAG
COMPILER_RT_HAS_W4_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WALL_FLAG
COMPILER_RT_HAS_WALL_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WC99_EXTENSIONS_FLAG
COMPILER_RT_HAS_WC99_EXTENSIONS_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WCOVERED_SWITCH_DEFAULT_FLAG
COMPILER_RT_HAS_WCOVERED_SWITCH_DEFAULT_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WD4146_FLAG
COMPILER_RT_HAS_WD4146_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WD4221_FLAG
COMPILER_RT_HAS_WD4221_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WD4291_FLAG
COMPILER_RT_HAS_WD4291_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WD4391_FLAG
COMPILER_RT_HAS_WD4391_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WD4722_FLAG
COMPILER_RT_HAS_WD4722_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WD4800_FLAG
COMPILER_RT_HAS_WD4800_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WERROR_FLAG
COMPILER_RT_HAS_WERROR_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WFRAME_LARGER_THAN_FLAG
COMPILER_RT_HAS_WFRAME_LARGER_THAN_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WGLOBAL_CONSTRUCTORS_FLAG
COMPILER_RT_HAS_WGLOBAL_CONSTRUCTORS_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WGNU_FLAG
COMPILER_RT_HAS_WGNU_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WNON_VIRTUAL_DTOR_FLAG
COMPILER_RT_HAS_WNON_VIRTUAL_DTOR_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WUNUSED_PARAMETER_FLAG
COMPILER_RT_HAS_WUNUSED_PARAMETER_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WVARIADIC_MACROS_FLAG
COMPILER_RT_HAS_WVARIADIC_MACROS_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WX_FLAG
COMPILER_RT_HAS_WX_FLAG:INTERNAL=
//Compiler supports -fxray-instrument
COMPILER_RT_HAS_XRAY_COMPILER_FLAG:INTERNAL=False
//Test COMPILER_RT_HAS_Zi_FLAG
COMPILER_RT_HAS_Zi_FLAG:INTERNAL=
//Test COMPILER_RT_TARGET_HAS_ATOMICS
COMPILER_RT_TARGET_HAS_ATOMICS:INTERNAL=1
//Test COMPILER_RT_TARGET_HAS_FCNTL_LCK
COMPILER_RT_TARGET_HAS_FCNTL_LCK:INTERNAL=1
//Test COMPILER_RT_TARGET_HAS_UNAME
COMPILER_RT_TARGET_HAS_UNAME:INTERNAL=1
//Result of TRY_COMPILE
COMPILE_HAVE_GNU_POSIX_REGEX:INTERNAL=FALSE
//Result of TRY_COMPILE
COMPILE_HAVE_POSIX_REGEX:INTERNAL=TRUE
//Result of TRY_COMPILE
COMPILE_HAVE_STEADY_CLOCK:INTERNAL=TRUE
//Result of TRY_COMPILE
COMPILE_HAVE_THREAD_SAFETY_ATTRIBUTES:INTERNAL=FALSE
//ADVANCED property for variable: CPACK_BINARY_BUNDLE
CPACK_BINARY_BUNDLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_DEB
CPACK_BINARY_DEB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_DRAGNDROP
CPACK_BINARY_DRAGNDROP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_FREEBSD
CPACK_BINARY_FREEBSD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_OSXX11
CPACK_BINARY_OSXX11-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_PACKAGEMAKER
CPACK_BINARY_PACKAGEMAKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_PRODUCTBUILD
CPACK_BINARY_PRODUCTBUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_RPM
CPACK_BINARY_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_STGZ
CPACK_BINARY_STGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TBZ2
CPACK_BINARY_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TGZ
CPACK_BINARY_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TXZ
CPACK_BINARY_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_RPM
CPACK_SOURCE_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TBZ2
CPACK_SOURCE_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TGZ
CPACK_SOURCE_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TXZ
CPACK_SOURCE_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TZ
CPACK_SOURCE_TZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG
CXX_SUPPORTS_CLASS_MEMACCESS_FLAG:INTERNAL=
//Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG
CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_CXX11
CXX_SUPPORTS_CXX11:INTERNAL=1
//Test CXX_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG
CXX_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_FPIC
CXX_SUPPORTS_FPIC:INTERNAL=1
//Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG
CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG
CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG
CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_NO_NESTED_ANON_TYPES_FLAG
CXX_SUPPORTS_NO_NESTED_ANON_TYPES_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_STRING_CONVERSION_FLAG
CXX_SUPPORTS_STRING_CONVERSION_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_WERROR_DATE_TIME
CXX_SUPPORTS_WERROR_DATE_TIME:INTERNAL=1
//Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW
CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW:INTERNAL=1
//Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR
CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR:INTERNAL=1
//Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG
C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=1
//Test C_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG
C_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG:INTERNAL=1
//Test C_SUPPORTS_FPIC
C_SUPPORTS_FPIC:INTERNAL=1
//Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG
C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG:INTERNAL=1
//Test C_SUPPORTS_STRING_CONVERSION_FLAG
C_SUPPORTS_STRING_CONVERSION_FLAG:INTERNAL=1
//Test C_SUPPORTS_WERROR_DATE_TIME
C_SUPPORTS_WERROR_DATE_TIME:INTERNAL=1
//Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW
C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW:INTERNAL=1
//Test C_WCOMMENT_ALLOWS_LINE_WRAP
C_WCOMMENT_ALLOWS_LINE_WRAP:INTERNAL=1
//Details about finding Backtrace
FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/usr/include][v()]
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[/usr/bin/git][v2.17.2 (Apple Git-113)()]
//Details about finding LibXml2
FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/usr/lib/libxml2.dylib][/usr/include/libxml2][v2.9.4()]
//Details about finding Perl
FIND_PACKAGE_MESSAGE_DETAILS_Perl:INTERNAL=[/usr/bin/perl][v5.18.2()]
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[/usr/local/bin/python2.7][v2.7.16()]
//Details about finding Sphinx
FIND_PACKAGE_MESSAGE_DETAILS_Sphinx:INTERNAL=[/Users/silence/anaconda3/bin/sphinx-build][v()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Test HAS_THREAD_LOCAL
HAS_THREAD_LOCAL:INTERNAL=1
//Have symbol CPU_COUNT
HAVE_CPU_COUNT:INTERNAL=
//Have include CrashReporterClient.h
HAVE_CRASHREPORTERCLIENT_H:INTERNAL=
//Test HAVE_CRASHREPORTER_INFO
HAVE_CRASHREPORTER_INFO:INTERNAL=1
//Test HAVE_CXX_ATOMICS64_WITHOUT_LIB
HAVE_CXX_ATOMICS64_WITHOUT_LIB:INTERNAL=1
//Test HAVE_CXX_ATOMICS_WITHOUT_LIB
HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1
//Test HAVE_CXX_FLAG_COVERAGE
HAVE_CXX_FLAG_COVERAGE:INTERNAL=1
//Test HAVE_CXX_FLAG_FNO_EXCEPTIONS
HAVE_CXX_FLAG_FNO_EXCEPTIONS:INTERNAL=1
//Test HAVE_CXX_FLAG_FSTRICT_ALIASING
HAVE_CXX_FLAG_FSTRICT_ALIASING:INTERNAL=1
//Test HAVE_CXX_FLAG_PEDANTIC
HAVE_CXX_FLAG_PEDANTIC:INTERNAL=1
//Test HAVE_CXX_FLAG_PEDANTIC_ERRORS
HAVE_CXX_FLAG_PEDANTIC_ERRORS:INTERNAL=1
//Test HAVE_CXX_FLAG_STD_CXX11
HAVE_CXX_FLAG_STD_CXX11:INTERNAL=1
//Test HAVE_CXX_FLAG_WALL
HAVE_CXX_FLAG_WALL:INTERNAL=1
//Test HAVE_CXX_FLAG_WD654
HAVE_CXX_FLAG_WD654:INTERNAL=
//Test HAVE_CXX_FLAG_WEXTRA
HAVE_CXX_FLAG_WEXTRA:INTERNAL=1
//Test HAVE_CXX_FLAG_WFLOAT_EQUAL
HAVE_CXX_FLAG_WFLOAT_EQUAL:INTERNAL=1
//Test HAVE_CXX_FLAG_WSHADOW
HAVE_CXX_FLAG_WSHADOW:INTERNAL=1
//Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
HAVE_CXX_FLAG_WSHORTEN_64_TO_32:INTERNAL=1
//Test HAVE_CXX_FLAG_WSTRICT_ALIASING
HAVE_CXX_FLAG_WSTRICT_ALIASING:INTERNAL=1
//Test HAVE_CXX_FLAG_WTHREAD_SAFETY
HAVE_CXX_FLAG_WTHREAD_SAFETY:INTERNAL=1
//Have symbol arc4random
HAVE_DECL_ARC4RANDOM:INTERNAL=1
//Have symbol FE_ALL_EXCEPT
HAVE_DECL_FE_ALL_EXCEPT:INTERNAL=1
//Have symbol FE_INEXACT
HAVE_DECL_FE_INEXACT:INTERNAL=1
//Have symbol strerror_s
HAVE_DECL_STRERROR_S:INTERNAL=
//Have symbol dladdr
HAVE_DLADDR:INTERNAL=1
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=1
//Have symbol dlopen
HAVE_DLOPEN:INTERNAL=1
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have include fenv.h
HAVE_FENV_H:INTERNAL=1
//Have symbol futimens
HAVE_FUTIMENS:INTERNAL=1
//Have symbol futimes
HAVE_FUTIMES:INTERNAL=1
//Have symbol getpagesize
HAVE_GETPAGESIZE:INTERNAL=1
//Have symbol getrlimit
HAVE_GETRLIMIT:INTERNAL=1
//Have symbol getrusage
HAVE_GETRUSAGE:INTERNAL=1
//Have include histedit.h
HAVE_HISTEDIT_H:INTERNAL=1
//Have symbol isatty
HAVE_ISATTY:INTERNAL=1
//Have library dl
HAVE_LIBDL:INTERNAL=1
//Have library edit
HAVE_LIBEDIT:INTERNAL=1
//Have library pfm
HAVE_LIBPFM_INITIALIZE:INTERNAL=
//Have library pthread
HAVE_LIBPTHREAD:INTERNAL=1
//Have library rt
HAVE_LIBRT:INTERNAL=
//Have library xar
HAVE_LIBXAR:INTERNAL=1
//Have library z
HAVE_LIBZ_Z:INTERNAL=1
//Have include link.h
HAVE_LINK_H:INTERNAL=
//Have symbol lseek64
HAVE_LSEEK64:INTERNAL=
//Have include mach/mach.h
HAVE_MACH_MACH_H:INTERNAL=1
//Have symbol mallctl
HAVE_MALLCTL:INTERNAL=
//Have symbol mallinfo
HAVE_MALLINFO:INTERNAL=
//Have include malloc.h
HAVE_MALLOC_H:INTERNAL=
//Have include malloc/malloc.h
HAVE_MALLOC_MALLOC_H:INTERNAL=1
//Have symbol malloc_zone_statistics
HAVE_MALLOC_ZONE_STATISTICS:INTERNAL=1
//Have symbol posix_fallocate
HAVE_POSIX_FALLOCATE:INTERNAL=
//Have symbol posix_spawn
HAVE_POSIX_SPAWN:INTERNAL=1
//Have symbol pread
HAVE_PREAD:INTERNAL=1
//Have symbol pthread_getname_np
HAVE_PTHREAD_GETNAME_NP:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_GETSPECIFIC:INTERNAL=1
//Have include pthread.h
HAVE_PTHREAD_H:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_MUTEX_LOCK:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_RWLOCK_INIT:INTERNAL=1
//Have symbol pthread_setname_np
HAVE_PTHREAD_SETNAME_NP:INTERNAL=1
//Have symbol realpath
HAVE_REALPATH:INTERNAL=1
//Have include rpc/xdr.h
HAVE_RPC_XDR_H:INTERNAL=
//Have symbol sbrk
HAVE_SBRK:INTERNAL=1
//Have symbol sched_getaffinity
HAVE_SCHED_GETAFFINITY:INTERNAL=
//Have symbol setenv
HAVE_SETENV:INTERNAL=1
//Have symbol setrlimit
HAVE_SETRLIMIT:INTERNAL=1
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Have symbol strerror
HAVE_STRERROR:INTERNAL=1
//Have symbol strerror_r
HAVE_STRERROR_R:INTERNAL=1
//Test HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC
HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC:INTERNAL=1
//Test HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC
HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC:INTERNAL=
//Have symbol sysconf
HAVE_SYSCONF:INTERNAL=1
//Have include sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=1
//Have include sys/mman.h
HAVE_SYS_MMAN_H:INTERNAL=1
//Have include sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=1
//Have include sys/resource.h
HAVE_SYS_RESOURCE_H:INTERNAL=1
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=1
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have library curses
HAVE_TERMINFO_CURSES:INTERNAL=1
//Have library terminfo
HAVE_TERMINFO_TERMINFO:INTERNAL=
//Have library tinfo
HAVE_TERMINFO_TINFO:INTERNAL=
//Have include termios.h
HAVE_TERMIOS_H:INTERNAL=1
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=1
//Have include unwind.h
HAVE_UNWIND_H:INTERNAL=1
//Have include valgrind/valgrind.h
HAVE_VALGRIND_VALGRIND_H:INTERNAL=
//Have include zlib.h
HAVE_ZLIB_H:INTERNAL=1
//Have symbol _Unwind_Backtrace
HAVE__UNWIND_BACKTRACE:INTERNAL=1
//ADVANCED property for variable: LIBCLANG_LIBRARY_VERSION
LIBCLANG_LIBRARY_VERSION-ADVANCED:INTERNAL=1
//Have library c
LIBCXXABI_HAS_CXA_THREAD_ATEXIT_IMPL:INTERNAL=
//Have library c
LIBCXXABI_HAS_C_LIB:INTERNAL=1
//Have library dl
LIBCXXABI_HAS_DL_LIB:INTERNAL=1
//Test LIBCXXABI_HAS_EHSC_FLAG
LIBCXXABI_HAS_EHSC_FLAG:INTERNAL=
//Test LIBCXXABI_HAS_FSTRICT_ALIASING_FLAG
LIBCXXABI_HAS_FSTRICT_ALIASING_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_FUNWIND_TABLES
LIBCXXABI_HAS_FUNWIND_TABLES:INTERNAL=1
//Have library gcc_s
LIBCXXABI_HAS_GCC_S_LIB:INTERNAL=
//Test LIBCXXABI_HAS_NODEFAULTLIBS_FLAG
LIBCXXABI_HAS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_NOSTDINCXX_FLAG
LIBCXXABI_HAS_NOSTDINCXX_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_NO_EHA_FLAG
LIBCXXABI_HAS_NO_EHA_FLAG:INTERNAL=
//Test LIBCXXABI_HAS_NO_EHS_FLAG
LIBCXXABI_HAS_NO_EHS_FLAG:INTERNAL=
//Test LIBCXXABI_HAS_NO_EXCEPTIONS_FLAG
LIBCXXABI_HAS_NO_EXCEPTIONS_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_NO_GR_FLAG
LIBCXXABI_HAS_NO_GR_FLAG:INTERNAL=
//Test LIBCXXABI_HAS_NO_RTTI_FLAG
LIBCXXABI_HAS_NO_RTTI_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_NO_WX_FLAG
LIBCXXABI_HAS_NO_WX_FLAG:INTERNAL=
//Test LIBCXXABI_HAS_PEDANTIC_FLAG
LIBCXXABI_HAS_PEDANTIC_FLAG:INTERNAL=1
//Have library pthread
LIBCXXABI_HAS_PTHREAD_LIB:INTERNAL=1
//Test LIBCXXABI_HAS_WALL_FLAG
LIBCXXABI_HAS_WALL_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WCHAR_SUBSCRIPTS_FLAG
LIBCXXABI_HAS_WCHAR_SUBSCRIPTS_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WCONVERSION_FLAG
LIBCXXABI_HAS_WCONVERSION_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WERROR_FLAG
LIBCXXABI_HAS_WERROR_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WMISMATCHED_TAGS_FLAG
LIBCXXABI_HAS_WMISMATCHED_TAGS_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WMISSING_BRACES_FLAG
LIBCXXABI_HAS_WMISSING_BRACES_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WNEWLINE_EOF_FLAG
LIBCXXABI_HAS_WNEWLINE_EOF_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WNO_ERROR_FLAG
LIBCXXABI_HAS_WNO_ERROR_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WSHADOW_FLAG
LIBCXXABI_HAS_WSHADOW_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WSHORTEN_64_TO_32_FLAG
LIBCXXABI_HAS_WSHORTEN_64_TO_32_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WSIGN_COMPARE_FLAG
LIBCXXABI_HAS_WSIGN_COMPARE_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WSIGN_CONVERSION_FLAG
LIBCXXABI_HAS_WSIGN_CONVERSION_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WSTRICT_ALIASING_FLAG
LIBCXXABI_HAS_WSTRICT_ALIASING_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WSTRICT_OVERFLOW_FLAG
LIBCXXABI_HAS_WSTRICT_OVERFLOW_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WUNDEF_FLAG
LIBCXXABI_HAS_WUNDEF_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WUNUSED_FUNCTION_FLAG
LIBCXXABI_HAS_WUNUSED_FUNCTION_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WUNUSED_PARAMETER_FLAG
LIBCXXABI_HAS_WUNUSED_PARAMETER_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WUNUSED_VARIABLE_FLAG
LIBCXXABI_HAS_WUNUSED_VARIABLE_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WWRITE_STRINGS_FLAG
LIBCXXABI_HAS_WWRITE_STRINGS_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_WX_FLAG
LIBCXXABI_HAS_WX_FLAG:INTERNAL=
//Test LIBCXXABI_HAS_W_FLAG
LIBCXXABI_HAS_W_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_EHSC_FLAG
LIBCXXABI_SUPPORTS_EHSC_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_FSTRICT_ALIASING_FLAG
LIBCXXABI_SUPPORTS_FSTRICT_ALIASING_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_FUNWIND_TABLES_FLAG
LIBCXXABI_SUPPORTS_FUNWIND_TABLES_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_NODEFAULTLIBS_FLAG
LIBCXXABI_SUPPORTS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_PEDANTIC_FLAG
LIBCXXABI_SUPPORTS_PEDANTIC_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WALL_FLAG
LIBCXXABI_SUPPORTS_WALL_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WCHAR_SUBSCRIPTS_FLAG
LIBCXXABI_SUPPORTS_WCHAR_SUBSCRIPTS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WCONVERSION_FLAG
LIBCXXABI_SUPPORTS_WCONVERSION_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG
LIBCXXABI_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WMISMATCHED_TAGS_FLAG
LIBCXXABI_SUPPORTS_WMISMATCHED_TAGS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WMISSING_BRACES_FLAG
LIBCXXABI_SUPPORTS_WMISSING_BRACES_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WNEWLINE_EOF_FLAG
LIBCXXABI_SUPPORTS_WNEWLINE_EOF_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WNO_ERROR_FLAG
LIBCXXABI_SUPPORTS_WNO_ERROR_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSHADOW_FLAG
LIBCXXABI_SUPPORTS_WSHADOW_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSHORTEN_64_TO_32_FLAG
LIBCXXABI_SUPPORTS_WSHORTEN_64_TO_32_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSIGN_COMPARE_FLAG
LIBCXXABI_SUPPORTS_WSIGN_COMPARE_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSIGN_CONVERSION_FLAG
LIBCXXABI_SUPPORTS_WSIGN_CONVERSION_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSTRICT_ALIASING_EQ_2_FLAG
LIBCXXABI_SUPPORTS_WSTRICT_ALIASING_EQ_2_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSTRICT_OVERFLOW_EQ_4_FLAG
LIBCXXABI_SUPPORTS_WSTRICT_OVERFLOW_EQ_4_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNDEF_FLAG
LIBCXXABI_SUPPORTS_WUNDEF_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNUSED_FUNCTION_FLAG
LIBCXXABI_SUPPORTS_WUNUSED_FUNCTION_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNUSED_PARAMETER_FLAG
LIBCXXABI_SUPPORTS_WUNUSED_PARAMETER_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNUSED_VARIABLE_FLAG
LIBCXXABI_SUPPORTS_WUNUSED_VARIABLE_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WWRITE_STRINGS_FLAG
LIBCXXABI_SUPPORTS_WWRITE_STRINGS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WX_FLAG
LIBCXXABI_SUPPORTS_WX_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_W_FLAG
LIBCXXABI_SUPPORTS_W_FLAG:INTERNAL=1
//STRINGS property for variable: LIBCXX_CXX_ABI
LIBCXX_CXX_ABI-STRINGS:INTERNAL=none;default;libcxxabi;libcxxrt;libstdc++;libsupc++;vcruntime
//Have library atomic
LIBCXX_HAS_ATOMIC_LIB:INTERNAL=
//Have library c
LIBCXX_HAS_C_LIB:INTERNAL=1
//Test LIBCXX_HAS_EHSC_FLAG
LIBCXX_HAS_EHSC_FLAG:INTERNAL=
//Have library gcc_s
LIBCXX_HAS_GCC_S_LIB:INTERNAL=
//Have library m
LIBCXX_HAS_M_LIB:INTERNAL=1
//Test LIBCXX_HAS_NO_EHA_FLAG
LIBCXX_HAS_NO_EHA_FLAG:INTERNAL=
//Test LIBCXX_HAS_NO_EHS_FLAG
LIBCXX_HAS_NO_EHS_FLAG:INTERNAL=
//Test LIBCXX_HAS_NO_GR_FLAG
LIBCXX_HAS_NO_GR_FLAG:INTERNAL=
//Test LIBCXX_HAS_NO_WX_FLAG
LIBCXX_HAS_NO_WX_FLAG:INTERNAL=
//Have library pthread
LIBCXX_HAS_PTHREAD_LIB:INTERNAL=1
//Have library rt
LIBCXX_HAS_RT_LIB:INTERNAL=
//Test LIBCXX_HAS_WX_FLAG
LIBCXX_HAS_WX_FLAG:INTERNAL=
//Test LIBCXX_HAVE_CXX_ATOMICS_WITHOUT_LIB
LIBCXX_HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1
//ADVANCED property for variable: LIBCXX_OVERRIDE_DARWIN_INSTALL
LIBCXX_OVERRIDE_DARWIN_INSTALL-ADVANCED:INTERNAL=1
//internal option to change build dialect
LIBCXX_STANDARD_VER:INTERNAL=c++11
//Test LIBCXX_SUPPORTS_EHSC_FLAG
LIBCXX_SUPPORTS_EHSC_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_FPIC_FLAG
LIBCXX_SUPPORTS_FPIC_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG
LIBCXX_SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_NODEFAULTLIBS_FLAG
LIBCXX_SUPPORTS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_NOSTDINCXX_FLAG
LIBCXX_SUPPORTS_NOSTDINCXX_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_STD_COLON_CXX11_FLAG
LIBCXX_SUPPORTS_STD_COLON_CXX11_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_STD_EQ_CXX11_FLAG
LIBCXX_SUPPORTS_STD_EQ_CXX11_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_STD_EQ_CXX14_FLAG
LIBCXX_SUPPORTS_STD_EQ_CXX14_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_STD_EQ_CXX17_FLAG
LIBCXX_SUPPORTS_STD_EQ_CXX17_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WALL_FLAG
LIBCXX_SUPPORTS_WALL_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG
LIBCXX_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WEXTRA_FLAG
LIBCXX_SUPPORTS_WEXTRA_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WEXTRA_SEMI_FLAG
LIBCXX_SUPPORTS_WEXTRA_SEMI_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_COVERED_SWITCH_DEFAULT_FLAG
LIBCXX_SUPPORTS_WNO_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_ERROR_FLAG
LIBCXX_SUPPORTS_WNO_ERROR_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_LONG_LONG_FLAG
LIBCXX_SUPPORTS_WNO_LONG_LONG_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_UNUSED_PARAMETER_FLAG
LIBCXX_SUPPORTS_WNO_UNUSED_PARAMETER_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_USER_DEFINED_LITERALS_FLAG
LIBCXX_SUPPORTS_WNO_USER_DEFINED_LITERALS_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WWRITE_STRINGS_FLAG
LIBCXX_SUPPORTS_WWRITE_STRINGS_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_W_FLAG
LIBCXX_SUPPORTS_W_FLAG:INTERNAL=1
//Have function __atomic_load_1
LIBOMP_HAVE_BUILTIN_ATOMIC:INTERNAL=1
//Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG
LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_FNO_RTTI_FLAG
LIBOMP_HAVE_FNO_RTTI_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_FTLS_MODEL_FLAG
LIBOMP_HAVE_FTLS_MODEL_FLAG:INTERNAL=1
//Have library m
LIBOMP_HAVE_LIBM:INTERNAL=1
//Have library psapi
LIBOMP_HAVE_LIBPSAPI:INTERNAL=
//Test LIBOMP_HAVE_M32_FLAG
LIBOMP_HAVE_M32_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_MMIC_FLAG
LIBOMP_HAVE_MMIC_FLAG:INTERNAL=
//Test LIBOMP_HAVE_MSSE2_FLAG
LIBOMP_HAVE_MSSE2_FLAG:INTERNAL=1
//Have includes windows.h;psapi.h
LIBOMP_HAVE_PSAPI_H:INTERNAL=
//Test LIBOMP_HAVE_VERSION_SYMBOLS
LIBOMP_HAVE_VERSION_SYMBOLS:INTERNAL=
//Test LIBOMP_HAVE_WCAST_QUAL_FLAG
LIBOMP_HAVE_WCAST_QUAL_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WEAK_ATTRIBUTE
LIBOMP_HAVE_WEAK_ATTRIBUTE:INTERNAL=1
//Test LIBOMP_HAVE_WNO_COMMENT_FLAG
LIBOMP_HAVE_WNO_COMMENT_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG
LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG
LIBOMP_HAVE_WNO_DEPRECATED_REGISTER_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG
LIBOMP_HAVE_WNO_FORMAT_PEDANTIC_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG
LIBOMP_HAVE_WNO_GNU_ANONYMOUS_STRUCT_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG
LIBOMP_HAVE_WNO_MISSING_BRACES_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG
LIBOMP_HAVE_WNO_MISSING_FIELD_INITIALIZERS_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG
LIBOMP_HAVE_WNO_SELF_ASSIGN_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG
LIBOMP_HAVE_WNO_SIGN_COMPARE_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_SWITCH_FLAG
LIBOMP_HAVE_WNO_SWITCH_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG
LIBOMP_HAVE_WNO_UNKNOWN_PRAGMAS_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG
LIBOMP_HAVE_WNO_UNUSED_FUNCTION_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG
LIBOMP_HAVE_WNO_UNUSED_LOCAL_TYPEDEF_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG
LIBOMP_HAVE_WNO_UNUSED_VALUE_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG
LIBOMP_HAVE_WNO_UNUSED_VARIABLE_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG
LIBOMP_HAVE_WNO_VLA_EXTENSION_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG
LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG:INTERNAL=
//Test LIBOMP_HAVE_X_CPP_FLAG
LIBOMP_HAVE_X_CPP_FLAG:INTERNAL=1
//Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS
LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS:INTERNAL=1
//Have library c
LIBUNWIND_HAS_C_LIB:INTERNAL=1
//Have library dl
LIBUNWIND_HAS_DL_LIB:INTERNAL=1
//Test LIBUNWIND_HAS_EHSC_FLAG
LIBUNWIND_HAS_EHSC_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_FSTRICT_ALIASING_FLAG
LIBUNWIND_HAS_FSTRICT_ALIASING_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_FUNWIND_TABLES
LIBUNWIND_HAS_FUNWIND_TABLES:INTERNAL=1
//Have library gcc
LIBUNWIND_HAS_GCC_LIB:INTERNAL=
//Have library gcc_s
LIBUNWIND_HAS_GCC_S_LIB:INTERNAL=
//Test LIBUNWIND_HAS_NODEFAULTLIBS_FLAG
LIBUNWIND_HAS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_NOSTDINCXX_FLAG
LIBUNWIND_HAS_NOSTDINCXX_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_NO_EHA_FLAG
LIBUNWIND_HAS_NO_EHA_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_NO_EHS_FLAG
LIBUNWIND_HAS_NO_EHS_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_NO_EXCEPTIONS_FLAG
LIBUNWIND_HAS_NO_EXCEPTIONS_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_NO_GR_FLAG
LIBUNWIND_HAS_NO_GR_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_NO_RTTI_FLAG
LIBUNWIND_HAS_NO_RTTI_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_NO_WX_FLAG
LIBUNWIND_HAS_NO_WX_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_PEDANTIC_FLAG
LIBUNWIND_HAS_PEDANTIC_FLAG:INTERNAL=1
//Have library pthread
LIBUNWIND_HAS_PTHREAD_LIB:INTERNAL=1
//Test LIBUNWIND_HAS_STD_CXX11
LIBUNWIND_HAS_STD_CXX11:INTERNAL=1
//Test LIBUNWIND_HAS_WALL_FLAG
LIBUNWIND_HAS_WALL_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WCHAR_SUBSCRIPTS_FLAG
LIBUNWIND_HAS_WCHAR_SUBSCRIPTS_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WCONVERSION_FLAG
LIBUNWIND_HAS_WCONVERSION_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WERROR_FLAG
LIBUNWIND_HAS_WERROR_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WMISMATCHED_TAGS_FLAG
LIBUNWIND_HAS_WMISMATCHED_TAGS_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WMISSING_BRACES_FLAG
LIBUNWIND_HAS_WMISSING_BRACES_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WNEWLINE_EOF_FLAG
LIBUNWIND_HAS_WNEWLINE_EOF_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WNO_ERROR_FLAG
LIBUNWIND_HAS_WNO_ERROR_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WNO_UNUSED_FUNCTION_FLAG
LIBUNWIND_HAS_WNO_UNUSED_FUNCTION_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSHADOW_FLAG
LIBUNWIND_HAS_WSHADOW_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSHORTEN_64_TO_32_FLAG
LIBUNWIND_HAS_WSHORTEN_64_TO_32_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSIGN_COMPARE_FLAG
LIBUNWIND_HAS_WSIGN_COMPARE_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSIGN_CONVERSION_FLAG
LIBUNWIND_HAS_WSIGN_CONVERSION_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSTRICT_ALIASING_FLAG
LIBUNWIND_HAS_WSTRICT_ALIASING_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WSTRICT_OVERFLOW_FLAG
LIBUNWIND_HAS_WSTRICT_OVERFLOW_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WUNDEF_FLAG
LIBUNWIND_HAS_WUNDEF_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WUNUSED_PARAMETER_FLAG
LIBUNWIND_HAS_WUNUSED_PARAMETER_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WUNUSED_VARIABLE_FLAG
LIBUNWIND_HAS_WUNUSED_VARIABLE_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WWRITE_STRINGS_FLAG
LIBUNWIND_HAS_WWRITE_STRINGS_FLAG:INTERNAL=1
//Test LIBUNWIND_HAS_WX_FLAG
LIBUNWIND_HAS_WX_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_W_FLAG
LIBUNWIND_HAS_W_FLAG:INTERNAL=1
//ADVANCED property for variable: LIBXML2_INCLUDE_DIR
LIBXML2_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBXML2_LIBRARY
LIBXML2_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBXML2_XMLLINT_EXECUTABLE
LIBXML2_XMLLINT_EXECUTABLE-ADVANCED:INTERNAL=1
//Test LINKER_SUPPORTS_COLOR_DIAGNOSTICS
LINKER_SUPPORTS_COLOR_DIAGNOSTICS:INTERNAL=
//For Visual Studio 2013, manually copy natvis files to Documents\Visual
// Studio 2013\Visualizers
LLVM_ADD_NATIVE_VISUALIZERS_TO_SOLUTION:INTERNAL=FALSE
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED
LLVM_BUILD_INSTRUMENTED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED_COVERAGE
LLVM_BUILD_INSTRUMENTED_COVERAGE-ADVANCED:INTERNAL=1
LLVM_CONFIG_HAS_RTTI:INTERNAL=NO
//ADVANCED property for variable: LLVM_ENABLE_IR_PGO
LLVM_ENABLE_IR_PGO-ADVANCED:INTERNAL=1
//Test LLVM_HAS_ATOMICS
LLVM_HAS_ATOMICS:INTERNAL=1
//ADVANCED property for variable: LLVM_TARGET_TRIPLE_ENV
LLVM_TARGET_TRIPLE_ENV-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOLS_INSTALL_DIR
LLVM_TOOLS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_BUGPOINT_BUILD
LLVM_TOOL_BUGPOINT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_BUGPOINT_PASSES_BUILD
LLVM_TOOL_BUGPOINT_PASSES_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_CLANG_BUILD
LLVM_TOOL_CLANG_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_DSYMUTIL_BUILD
LLVM_TOOL_DSYMUTIL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_GOLD_BUILD
LLVM_TOOL_GOLD_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLC_BUILD
LLVM_TOOL_LLC_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLI_BUILD
LLVM_TOOL_LLI_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_AR_BUILD
LLVM_TOOL_LLVM_AR_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_AS_BUILD
LLVM_TOOL_LLVM_AS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_AS_FUZZER_BUILD
LLVM_TOOL_LLVM_AS_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_BCANALYZER_BUILD
LLVM_TOOL_LLVM_BCANALYZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CAT_BUILD
LLVM_TOOL_LLVM_CAT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CFI_VERIFY_BUILD
LLVM_TOOL_LLVM_CFI_VERIFY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CONFIG_BUILD
LLVM_TOOL_LLVM_CONFIG_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_COV_BUILD
LLVM_TOOL_LLVM_COV_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CVTRES_BUILD
LLVM_TOOL_LLVM_CVTRES_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CXXDUMP_BUILD
LLVM_TOOL_LLVM_CXXDUMP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CXXFILT_BUILD
LLVM_TOOL_LLVM_CXXFILT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CXXMAP_BUILD
LLVM_TOOL_LLVM_CXXMAP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_C_TEST_BUILD
LLVM_TOOL_LLVM_C_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DIFF_BUILD
LLVM_TOOL_LLVM_DIFF_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DIS_BUILD
LLVM_TOOL_LLVM_DIS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DWARFDUMP_BUILD
LLVM_TOOL_LLVM_DWARFDUMP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DWP_BUILD
LLVM_TOOL_LLVM_DWP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_ELFABI_BUILD
LLVM_TOOL_LLVM_ELFABI_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_EXEGESIS_BUILD
LLVM_TOOL_LLVM_EXEGESIS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_EXTRACT_BUILD
LLVM_TOOL_LLVM_EXTRACT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_GO_BUILD
LLVM_TOOL_LLVM_GO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_ISEL_FUZZER_BUILD
LLVM_TOOL_LLVM_ISEL_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD
LLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_JITLISTENER_BUILD
LLVM_TOOL_LLVM_JITLISTENER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LINK_BUILD
LLVM_TOOL_LLVM_LINK_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LTO2_BUILD
LLVM_TOOL_LLVM_LTO2_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LTO_BUILD
LLVM_TOOL_LLVM_LTO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MCA_BUILD
LLVM_TOOL_LLVM_MCA_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD
LLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MC_BUILD
LLVM_TOOL_LLVM_MC_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD
LLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD
LLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MODEXTRACT_BUILD
LLVM_TOOL_LLVM_MODEXTRACT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MT_BUILD
LLVM_TOOL_LLVM_MT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_NM_BUILD
LLVM_TOOL_LLVM_NM_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OBJCOPY_BUILD
LLVM_TOOL_LLVM_OBJCOPY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OBJDUMP_BUILD
LLVM_TOOL_LLVM_OBJDUMP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OPT_FUZZER_BUILD
LLVM_TOOL_LLVM_OPT_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OPT_REPORT_BUILD
LLVM_TOOL_LLVM_OPT_REPORT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_PDBUTIL_BUILD
LLVM_TOOL_LLVM_PDBUTIL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_PROFDATA_BUILD
LLVM_TOOL_LLVM_PROFDATA_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_RC_BUILD
LLVM_TOOL_LLVM_RC_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_READOBJ_BUILD
LLVM_TOOL_LLVM_READOBJ_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_RTDYLD_BUILD
LLVM_TOOL_LLVM_RTDYLD_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SHLIB_BUILD
LLVM_TOOL_LLVM_SHLIB_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SIZE_BUILD
LLVM_TOOL_LLVM_SIZE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD
LLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SPLIT_BUILD
LLVM_TOOL_LLVM_SPLIT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_STRESS_BUILD
LLVM_TOOL_LLVM_STRESS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_STRINGS_BUILD
LLVM_TOOL_LLVM_STRINGS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SYMBOLIZER_BUILD
LLVM_TOOL_LLVM_SYMBOLIZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_UNDNAME_BUILD
LLVM_TOOL_LLVM_UNDNAME_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_XRAY_BUILD
LLVM_TOOL_LLVM_XRAY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD
LLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LTO_BUILD
LLVM_TOOL_LTO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_OBJ2YAML_BUILD
LLVM_TOOL_OBJ2YAML_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_OPT_BUILD
LLVM_TOOL_OPT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_OPT_REMARKS_BUILD
LLVM_TOOL_OPT_REMARKS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_OPT_VIEWER_BUILD
LLVM_TOOL_OPT_VIEWER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_SANCOV_BUILD
LLVM_TOOL_SANCOV_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_SANSTATS_BUILD
LLVM_TOOL_SANSTATS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_VERIFY_USELISTORDER_BUILD
LLVM_TOOL_VERIFY_USELISTORDER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_XCODE_TOOLCHAIN_BUILD
LLVM_TOOL_XCODE_TOOLCHAIN_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_YAML2OBJ_BUILD
LLVM_TOOL_YAML2OBJ_BUILD-ADVANCED:INTERNAL=1
//Have symbol __GLIBC__
LLVM_USING_GLIBC:INTERNAL=
//ADVANCED property for variable: LLVM_UTILS_INSTALL_DIR
LLVM_UTILS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OCAMLFIND
OCAMLFIND-ADVANCED:INTERNAL=1
//Test OPENMP_HAVE_STD_CPP11_FLAG
OPENMP_HAVE_STD_CPP11_FLAG:INTERNAL=1
//Test OPENMP_HAVE_STD_GNUPP11_FLAG
OPENMP_HAVE_STD_GNUPP11_FLAG:INTERNAL=1
//Test OPENMP_HAVE_WERROR_FLAG
OPENMP_HAVE_WERROR_FLAG:INTERNAL=1
PC_LIBXML_CFLAGS:INTERNAL=-I/usr/include/libxml2
PC_LIBXML_CFLAGS_I:INTERNAL=
PC_LIBXML_CFLAGS_OTHER:INTERNAL=
PC_LIBXML_FOUND:INTERNAL=1
PC_LIBXML_INCLUDEDIR:INTERNAL=/usr/include
PC_LIBXML_INCLUDE_DIRS:INTERNAL=/usr/include/libxml2
PC_LIBXML_LDFLAGS:INTERNAL=-lxml2
PC_LIBXML_LDFLAGS_OTHER:INTERNAL=
PC_LIBXML_LIBDIR:INTERNAL=/usr/lib
PC_LIBXML_LIBRARIES:INTERNAL=xml2
PC_LIBXML_LIBRARY_DIRS:INTERNAL=
PC_LIBXML_LIBS:INTERNAL=
PC_LIBXML_LIBS_L:INTERNAL=
PC_LIBXML_LIBS_OTHER:INTERNAL=
PC_LIBXML_LIBS_PATHS:INTERNAL=
PC_LIBXML_PREFIX:INTERNAL=/usr
PC_LIBXML_STATIC_CFLAGS:INTERNAL=-I/usr/include/libxml2
PC_LIBXML_STATIC_CFLAGS_I:INTERNAL=
PC_LIBXML_STATIC_CFLAGS_OTHER:INTERNAL=
PC_LIBXML_STATIC_INCLUDE_DIRS:INTERNAL=/usr/include/libxml2
PC_LIBXML_STATIC_LDFLAGS:INTERNAL=-lxml2;-lz;-lpthread;-licucore;-lm
PC_LIBXML_STATIC_LDFLAGS_OTHER:INTERNAL=
PC_LIBXML_STATIC_LIBDIR:INTERNAL=
PC_LIBXML_STATIC_LIBRARIES:INTERNAL=xml2;z;pthread;icucore;m
PC_LIBXML_STATIC_LIBRARY_DIRS:INTERNAL=
PC_LIBXML_STATIC_LIBS:INTERNAL=
PC_LIBXML_STATIC_LIBS_L:INTERNAL=
PC_LIBXML_STATIC_LIBS_OTHER:INTERNAL=
PC_LIBXML_STATIC_LIBS_PATHS:INTERNAL=
PC_LIBXML_VERSION:INTERNAL=2.9.4
PC_LIBXML_libxml-2.0_INCLUDEDIR:INTERNAL=
PC_LIBXML_libxml-2.0_LIBDIR:INTERNAL=
PC_LIBXML_libxml-2.0_PREFIX:INTERNAL=
PC_LIBXML_libxml-2.0_VERSION:INTERNAL=
//ADVANCED property for variable: PERL_EXECUTABLE
PERL_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//Result of TRY_RUN
RUN_HAVE_POSIX_REGEX:INTERNAL=0
//Result of TRY_RUN
RUN_HAVE_STEADY_CLOCK:INTERNAL=0
//STRINGS property for variable: SANITIZER_CXX_ABI
SANITIZER_CXX_ABI-STRINGS:INTERNAL=none;default;libstdc++;libc++
//Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG
SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG:INTERNAL=1
//Test SUPPORTS_GNU_ZERO_VARIADIC_MACRO_ARGUMENTS_FLAG
SUPPORTS_GNU_ZERO_VARIADIC_MACRO_ARGUMENTS_FLAG:INTERNAL=1
//Test SUPPORTS_VARIADIC_MACROS_FLAG
SUPPORTS_VARIADIC_MACROS_FLAG:INTERNAL=1
//ADVANCED property for variable: Z3_INCLUDE_DIR
Z3_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Z3_LIBRARIES
Z3_LIBRARIES-ADVANCED:INTERNAL=1
//Have symbol backtrace
_Backtrace_SYM_FOUND:INTERNAL=1
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=/Users/silence/Documents/Github/Me/iOS-Reverse/Obfuscator/Release
__pkg_config_arguments_PC_LIBXML:INTERNAL=QUIET;libxml-2.0
__pkg_config_checked_PC_LIBXML:INTERNAL=1
algorithms.partition_point_REPORTED:INTERNAL=ON
algorithms_REPORTED:INTERNAL=ON
filesystem_REPORTED:INTERNAL=ON
function_REPORTED:INTERNAL=ON
ordered_set_REPORTED:INTERNAL=ON
//ADVANCED property for variable: pkgcfg_lib_PC_LIBXML_xml2
pkgcfg_lib_PC_LIBXML_xml2-ADVANCED:INTERNAL=1
prefix_result:INTERNAL=/usr/lib
string_REPORTED:INTERNAL=ON
stringstream_REPORTED:INTERNAL=ON
unordered_set_operations_REPORTED:INTERNAL=ON
util_smartptr_REPORTED:INTERNAL=ON
vector_operations_REPORTED:INTERNAL=ON

